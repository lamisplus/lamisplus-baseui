{"version":3,"sources":["actions/pharmacy.js","components/Pharmacy/PatientPrescriptions.js","api/index.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchPrescriptions","fetchPatientPrescriptions","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_api__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_2__","dispatch","axios","get","concat","url","then","response","type","ACTION_TYPES","payload","data","catch","error","patientId","console","log","textstyle","fontSize","fontWeight","connect","state","prescriptions","pharmacy","patientPrescriptions","props","_useState","useState","_useState2","Object","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","modal2","setModal2","toggle2","className","_useState3","checkedA","checkedB","_useState4","setState","handleChange","event","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","checked","location","patientName","useEffect","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","variant","style","width","drugName","drugId","comment","gender","map","react__WEBPACK_IMPORTED_MODULE_3__","marginBottom","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_5___default","onClick","cursor","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_9__","onChange","color","inputProps","aria-label","reactstrap__WEBPACK_IMPORTED_MODULE_10__","isOpen","toggle","size","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","marginTop","reactstrap__WEBPACK_IMPORTED_MODULE_14__","xs","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","LABSERVICECODE"],"mappings":"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","file":"static/js/40.c42c6c69.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { url } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n/**\n * ===============================================================================\n * @Actions\n * Encounter CRUD OPERATIONS\n * returns API response from server => payload: response || error\n * @method GET => fetchPrescriptions() -> get all encounters: params {null} || query {dateStart}{dateEnd}\n *@method GET => fetchPatientPrescriptions() -> get all prescriptions for a patient: params {patientId} || query {}\n *================================================================================\n */\n\nexport const fetchPrescriptions = () => dispatch => {\n  axios\n    .get(\n      `${url}encounters/4ab293ff-6837-41e8-aa85-14f25ce59ef0/{dateStart}/{dateEnd}`\n    )\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_FETCH_PRESCRIPTIONS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_ERROR,\n        payload: \"Something went wrong\",\n      });\n    });\n};\n\nexport const fetchPatientPrescriptions = (patientId) => dispatch => {\n  console.log(patientId)\n  axios\n    .get(\n      `${url}patients/${patientId}/encounters/4ab293ff-6837-41e8-aa85-14f25ce59ef0/{dateStart}/{dateEnd}`\n    )\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_PATIENT_PRESCRIPTIONS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      console.log(\"Pharmacy Error: \", error);\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_ERROR,\n        payload: \"Something went wrong\",\n      });\n    });\n\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport \"./patientPrescriptions.css\";\nimport { Checkbox } from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport {fetchPatientPrescriptions} from '../../actions/pharmacy'\nimport { connect } from 'react-redux'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {\n  Col,\n  Row,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button\n} from \"reactstrap\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst textstyle = {\n  fontSize: \"14px\",\n  fontWeight: \"bolder\"\n};\n\nconst PatientPrescriptions = props => {\n  const [modal2, setModal2] = useState(false);\n  const toggle2 = () => setModal2(!modal2);\n  const { className } = props;\n\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const patientId = props.location.patientId;\n  const patientName = props.location.name;\n\n    useEffect(() => {\n      props.fetchPatientPrescriptions(patientId);\n    }, []);\n\n    console.log(props.prescriptions)\n\n  const datas = [{\n    drugName: \"Paracetamol 500 mg (tablets)\",\n    drugId: \"56\",\n    comment: \" 2 (3times daily) 13 tablets Start on 12/01/2020 for 2 weeks\"\n  },\n    {\n    gender: \"Male\",\n    drugName: \"Paracetamol 500 mg (tablets)\",\n    drugId: \"56\",\n    comment: \" 2 (3times daily) 13 tablets Start on 12/01/2020 for 2 weeks\"\n    },\n    {\n    drugName: \"Paracetamol 500 mg (tablets)\",\n    drugId: \"56\",\n    comment: \" 2 (3times daily) 13 tablets Start on 12/01/2020 for 2 weeks\"\n  }]\n\n  \n\n  return (\n    <div className=\"patpres\">\n      <h2>Pharmacy</h2>\n      <Divider variant=\"middle\" />\n      <br />\n      <span>Pharmacy > 012345678</span>\n      <br />\n      <br />\n      <h5>View prescription - 012345678</h5>\n      <div className=\"info_box\">\n        <p> {patientName} ( 012345678) | 23 years</p>\n        <p> Female </p>\n      </div>\n      <div className=\"pres_table\">\n        <table style={{ width: \"80%\" }}>\n          <thead>\n            <tr>\n              <th>Prescription</th>\n              <th>Note/Remarks</th>\n              <th>Action</th>\n              <th>Dispensed</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.prescriptions ? (\n              datas.map((data) => (\n                <Fragment>\n                  {\" \"}\n                  <tr style={{marginBottom: \"10 rem\"}}>\n                    <td>\n                      <span>\n                        <b>{data.drugName}</b>\n                      </span>\n                      <br />\n                      <span>{data.comment}</span>\n                    </td>\n                    <td>\n                      <span>Administer adequately</span>\n                    </td>\n                    <td>\n                      <VisibilityIcon\n                        onClick={toggle2}\n                        style={{ cursor: \"pointer\" }}\n                      />\n                    </td>\n                    <td>\n                      {\" \"}\n                      <Switch\n                        checked={state.checkedB}\n                        onChange={handleChange}\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                      />\n                    </td>\n                  </tr>\n                  <hr  width= \"80%\" />\n                </Fragment>\n              ))\n            ) : (\n              <h2>No Prescriptions Found</h2>\n            )}\n          </tbody>\n        </table>\n      </div>\n      <Modal isOpen={modal2} toggle={toggle2} className={className} size=\"lg\">\n        <ModalHeader toggle={toggle2}>Precription Detail</ModalHeader>\n        <ModalBody>\n          <Row style={{ marginTop: \"20px\" }}>\n            <Col xs=\"12\">\n              Drug Name\n              <br />\n              <p style={textstyle}>Paracetamol 55mg </p>\n            </Col>\n            <Col xs=\"4\">\n              Dose\n              <br />\n              <p style={textstyle}>3</p>\n            </Col>\n            <Col xs=\"4\">\n              Unit\n              <br />\n              <p style={textstyle}>Tablet</p>\n            </Col>\n            <Col xs=\"4\">\n              Frequency\n              <br />\n              <p style={textstyle}>Three times daily</p>\n            </Col>\n          </Row>\n          <Row style={{ marginTop: \"20px\" }}>\n            <Col xs=\"4\">\n              Start Date\n              <br />\n              <p style={textstyle}>2020/03/12</p>\n            </Col>\n            <Col xs=\"12\">Additional Information</Col>\n            <Col xs=\"4\">\n              Instruction\n              <br />\n              <p style={textstyle}>020/03/03</p>\n            </Col>\n            <Col xs=\"4\">\n              Additional Instruction\n              <br />\n              <p style={textstyle}>Nil</p>\n            </Col>\n          </Row>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle2}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    prescriptions: state.pharmacy.patientPrescriptions\n  }\n}\n\nexport default connect(mapStateToProps, {fetchPatientPrescriptions})(PatientPrescriptions);\n","export const url = 'http://lamisplus.org/base-module/api/';\nexport const HIVSERVICECODE = \"\";\nexport const LABSERVICECODE = \"87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e\";\nexport const PHARMACYSERVICECODE = \"\";\n"],"sourceRoot":""}