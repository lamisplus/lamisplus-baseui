{"version":3,"sources":["components/CheckIn/CheckedInPatientList.jsx","components/CheckIn/CheckedInPatientPage.jsx","api/index.js","components/Typography.js","components/Page.js","components/Title/CardTitle.jsx"],"names":["FilterComponent","_ref","filterText","onFilter","onClear","react_default","a","createElement","Form","className","onSubmit","e","preventDefault","Card","CardContent","Input","type","placeholder","value","onChange","SampleExpandedComponent","_ref2","data","dateRegistration","dob","customStyles","headCells","style","color","fontSize","fontWeight","BasicTable","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setFilterText","_React$useState3","_React$useState4","resetPaginationToggle","setResetPaginationToggle","_useState","_useState2","setData","filteredItems","filter","item","firstName","toLowerCase","includes","lastName","hospitalNumber","_useState3","_useState4","modal","setModal","toggle","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","response","result","wrap","_context","prev","next","fetch","url","sent","json","console","log","t0","stop","apply","this","arguments","fetchData","modalClickHandler","subHeaderComponentMemo","useMemo","CheckedInPatientList_FilterComponent","target","index_cjs_default","columns","name","selector","sortable","Display","cell","row","IconButton","onClick","aria-label","title","Delete","ignoreRowClick","allowOverflow","button","pagination","paginationResetDefaultPage","subHeader","subHeaderComponent","highlightOnHover","striped","subHeaderAlign","fixedHeader","expandableRows","persistTableHead","expandableRowsComponent","CheckedInPatientList_SampleExpandedComponent","Modal","isOpen","ModalHeader","ModalBody","Alert","ModalFooter","Button","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","PatientPage","classes","Page","index_esm","size","cardBottom","CardTitle","react_router_dom","to","CheckedInPatientList","__webpack_require__","d","__webpack_exports__","LABSERVICECODE","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","Tag","tag","restProps","objectWithoutProperties","classNames","defineProperty","assign","defaultProps","bem","bn","create","breadcrumbs","children","b","components_Typography","Breadcrumb","BreadcrumbItem","length","map","index","active","key","Title","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1__","props","component","variant","gutterBottom"],"mappings":"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","file":"static/js/37.af6bce92.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport DataTable from 'react-data-table-component'\nimport { Card, CardContent } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport { Delete } from '@material-ui/icons'\nimport './PatientSearch.css'\nimport {\n  Input,\n  Form,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Modal,\n  Alert\n} from 'reactstrap'\n\nimport { url } from '../../api'\n\n/**Find table documentations at\n import TablePagination from '@material-ui/core/TablePagination'; * 1.https://www.npmjs.com/package/react-data-table-component#storybook-dependencies----rootdirstoriespackagejson\n import TableRow from '@material-ui/core/TableRow'; * 2. https://jbetancur.github.io/react-data-table-component/?path=/story/conditional-styling--conditional-cells */\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <Form className='cr-search-form' onSubmit={e => e.preventDefault()}>\n    <Card>\n      <CardContent>\n        <Input\n          type='search'\n          placeholder='Search by Patient Name, Patient ID '\n          className='cr-search-form__input pull-right'\n          value={filterText}\n          onChange={onFilter}\n        />\n      </CardContent>\n    </Card>\n  </Form>\n)\n\nconst SampleExpandedComponent = ({ data }) => (\n  <div>\n    <span>\n      <b> Date Of Registration:</b> {data.dateRegistration}{' '}\n    </span>{' '}\n    <br></br>{' '}\n    <span>\n      <b>Date Of Birth:</b> {data.dob}{' '}\n    </span>\n  </div>\n)\n\n// const calculate_age = (dob) => {\n//     var today = new Date();\n//     var dateParts = dob.split(\"-\");\n//     var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n//     var birthDate = new Date(dateObject);  // create a date object directly from `dob1` argument\n//     console.log(dateObject);\n//     console.log(birthDate);\n//     var age_now = today.getFullYear() - birthDate.getFullYear();\n//     var m = today.getMonth() - birthDate.getMonth();\n//     if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate()))\n//     {\n//         age_now--;\n//     }\n\n//     if(age_now === 0){\n//         return m + ' month(s)';\n//     }\n//     console.log(age_now);\n//     return age_now + ' year(s)';\n// }\nconst columns = modalClickHandler => [\n  {\n    name: 'Patient ID',\n    selector: 'hospitalNumber',\n    sortable: false,\n    Display: true\n  },\n  {\n    name: 'Patient Name',\n    selector: 'name',\n    sortable: false,\n    cell: row => (\n      <span>\n        {row.firstName} {row.lastName}\n      </span>\n    )\n  },\n  {\n    name: 'Start Visit',\n    selector: 'dob',\n    sortable: false\n  },\n  {\n    name: 'End Visit',\n    selector: 'dob',\n    sortable: false\n  },\n  {\n    name: 'Action',\n    cell: () => (\n      <div>\n        <IconButton\n          color='primary'\n          onClick={modalClickHandler}\n          aria-label='Cancel CheckIn'\n          title='Cancel CheckIn'\n        >\n          {' '}\n          <Delete />\n        </IconButton>\n      </div>\n    ),\n    ignoreRowClick: true,\n    allowOverflow: true,\n    button: true\n  }\n]\n\nconst customStyles = {\n  headCells: {\n    style: {\n      color: '#202124',\n      fontSize: '14px',\n      fontWeight: 'bold'\n    }\n  }\n}\n\nconst BasicTable = () => {\n  const [filterText, setFilterText] = React.useState('')\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  )\n  const [data, setData] = useState([])\n  const filteredItems =\n    !filterText && data\n      ? []\n      : data.filter(\n          item =>\n            (item.firstName &&\n              item.firstName\n                .toLowerCase()\n                .includes(filterText.toLowerCase())) ||\n            (item.lastName &&\n              item.lastName.toLowerCase().includes(filterText.toLowerCase())) ||\n            (item.hospitalNumber &&\n              item.hospitalNumber\n                .toLowerCase()\n                .includes(filterText.toLowerCase()))\n        )\n  const [modal, setModal] = useState(false)\n  const toggle = () => setModal(!modal)\n\n  useEffect(() => {\n    async function fetchData () {\n      try {\n        const response = await fetch(url + 'visits/datevisit/')\n        const result = await response.json()\n        setData(result)\n        console.log(result)\n      } catch (error) {\n        setData([])\n      }\n    }\n    fetchData()\n  }, [])\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle)\n        setFilterText('')\n      }\n    }\n\n    return (\n      <FilterComponent\n        onFilter={e => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    )\n  }, [filterText, resetPaginationToggle])\n\n  return (\n    <div>\n      <card>\n        <cardcontent>\n          <DataTable\n            columns={columns(toggle)}\n            data={filteredItems}\n            customStyles={customStyles}\n            pagination\n            paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\n            subHeader\n            subHeaderComponent={subHeaderComponentMemo}\n            highlightOnHover={true}\n            striped={true}\n            subHeaderAlign={'left'}\n            // noHeader={false}\n            fixedHeader={true}\n            expandableRows\n            persistTableHead\n            expandableRowsComponent={<SampleExpandedComponent />}\n          />\n        </cardcontent>\n      </card>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Cancel Patient</ModalHeader>\n        <ModalBody>\n          <p>Are you sure you want to cancel this visit?</p>\n          <Alert color='primary'>\n            <small>\n              <h6>Note: You can only cancel a patient without Encounter</h6>\n            </small>\n          </Alert>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={toggle}>\n            Continue\n          </Button>{' '}\n          <Button color='secondary' onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default BasicTable\n","import Page from 'components/Page';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Button,\n    Form,\n    Alert\n} from 'reactstrap';\nimport {\n    Card,\n    CardContent,\n}\n\n    from '@material-ui/core';\nimport { TiWarningOutline } from \"react-icons/ti\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from 'components/Title/CardTitle';\nimport CheckedInPatientList from 'components/CheckIn/CheckedInPatientList';\n\nimport {\n    TiArrowBack,\n} from 'react-icons/ti';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n}));\n\nconst PatientPage = () => {\n    const classes = useStyles();\n    return (\n        <Page title=\"Checked In\" >\n            <Alert color=\"primary\">\n                <TiWarningOutline\n                    size=\"30\"\n                    className=\" text-dark\"/>  { '  '}\n                Note : All Available Patients in the system can be search here\n            </Alert>\n            <Card className={classes.cardBottom}>\n                <CardContent>\n                    <Title >All CheckedIn Patient\n                        <Link to=\"/checkin\">\n                            <Button color=\"primary\" className=\" float-right mr-1\" >\n                                <TiArrowBack/> Go Back\n                            </Button>\n                            \n                        </Link>\n                    </Title>\n                    <br/>\n                    <br/>\n                    {/* Search Form Input Field */}\n                    <Form>\n                    </Form>\n                    <br/>\n                    <CheckedInPatientList />\n                </CardContent>\n            </Card>\n        </Page>\n    );\n};\n\nexport default PatientPage;\n","export const url = 'http://lamisplus.org/base-module/api/';\nexport const HIVSERVICECODE = \"\";\nexport const LABSERVICECODE = \"87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e\";\nexport const PHARMACYSERVICECODE = \"\";\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};"],"sourceRoot":""}