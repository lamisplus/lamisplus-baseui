{"version":3,"sources":["components/Laboratory/LaboratoryPage.jsx","components/Typography.js","components/Page.js","components/SearchBox/SearchInput.jsx","components/DataTable/DataTable.jsx"],"names":["CheckInPage","_useState","useState","_useState2","Object","_Users_matosky_lamis_ui_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","activeTab","setActiveTab","toggle","tab","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","components_Page__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_5__","color","react_icons_ti__WEBPACK_IMPORTED_MODULE_17__","size","className","reactstrap__WEBPACK_IMPORTED_MODULE_6__","tabs","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","classnames","active","onClick","style","react_icons_fa__WEBPACK_IMPORTED_MODULE_18__","data-tip","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","tabId","sm","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","components_SearchBox_SearchInput__WEBPACK_IMPORTED_MODULE_19__","body","components_DataTable_DataTable__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","type","restProps","objectWithoutProperties","classes","classNames","defineProperty","react_default","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","components_Typography","Breadcrumb","BreadcrumbItem","length","map","_ref2","index","name","key","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","SearchInput","onSubmit","preventDefault","placeholder","useStyles","makeStyles","table","minWidth","createData","calories","fat","carbs","protein","rows","DataTableList","props","modal","setModal","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_TableContainer__WEBPACK_IMPORTED_MODULE_6__","component","Paper","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_3__","aria-label","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_5__","align","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_4__","row","scope","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_10__","react_router_dom__WEBPACK_IMPORTED_MODULE_14__","to","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_11__","react_icons_fa__WEBPACK_IMPORTED_MODULE_12__","react_icons_md__WEBPACK_IMPORTED_MODULE_13__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"2TAwJeA,UAlIK,WAAM,IAAAC,EACYC,mBAAS,KADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACfK,EADeH,EAAA,GACJI,EADIJ,EAAA,GAGlBK,EAAS,SAAAC,GACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEKH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACvBR,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACpBR,EAAAC,EAAAC,cAAA,aAIJF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACxBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,MAAM,WACNV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIC,KAAK,KACLC,UAAU,eAHrB,KAGuC,KAHvC,wDASHb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKC,MAAI,GAEPf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACIhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACIJ,UAAWK,IAAW,CAAEC,OAAsB,MAAdvB,IAChCwB,QAAS,WAAQtB,EAAO,MACxBuB,MAAO,CAAEX,MAAQ,SAErBV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASC,WAAS,sBACjB,IACDvB,EAAAC,EAAAC,cAAA,2BAPA,eAUJF,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACIhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACIJ,UAAWK,IAAW,CAAEC,OAAsB,MAAdvB,IAChCwB,QAAS,WAAQtB,EAAO,MACxBuB,MAAO,CAAEX,MAAQ,SAErBV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASC,WAAS,sBACjB,IACDvB,EAAAC,EAAAC,cAAA,2BAPA,aAUJF,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACIhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACIJ,UAAWK,IAAW,CAAEC,OAAsB,MAAdvB,IAChCwB,QAAS,WAAQtB,EAAO,MACxBuB,MAAO,CAAEX,MAAQ,SAErBV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAASC,WAAS,sBACjB,IACDvB,EAAAC,EAAAC,cAAA,2BAPA,eAUJF,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEJ,UAAWK,IAAW,CAAEC,OAAsB,MAAdvB,IAChCwB,QAAS,WAAQtB,EAAO,MACxBuB,MAAO,CAAEX,MAAQ,SAEjBV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAWC,WAAS,WACf,KACDvB,EAAAC,EAAAC,cAAA,2BAPN,YAWJF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAY5B,UAAWA,GACrBI,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAASC,MAAM,KACb1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKsB,GAAG,MACR3B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMf,UAAU,SAEhBb,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,wBAIA7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACI9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACA/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,OAGJhC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMK,MAAI,GAENjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,gBAaxBlC,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAASC,MAAM,KACb1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKsB,GAAG,MACN3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMK,MAAI,GACRjC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,0BACAnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,wKCrIVC,EAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,cAKRC,EAAa,SAAAC,GAAiD,IAE9DC,EAFqBC,EAAyCF,EAA9CG,IAAU1C,EAAoCuC,EAApCvC,UAAW2C,EAAyBJ,EAAzBI,KAASC,EAAgB/D,OAAAgE,EAAA,EAAAhE,CAAA0D,EAAA,4BAC5DO,EAAUC,IAAWlE,OAAAmE,EAAA,EAAAnE,CAAA,GAAG8D,IAASA,GAAQ3C,GAW/C,OAPEwC,EADEC,KAEQA,GAAOjB,EAAOmB,GACbnB,EAAOmB,GAEP,KAGNM,EAAA7D,EAAAC,cAACmD,EAAD3D,OAAAqE,OAAA,GAAcN,EAAd,CAAyB5C,UAAW8C,MAS7CR,EAAWa,aAAe,CACxBR,KAAM,KAGOL,QCtCTc,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAAhB,GAOP,IANJiB,EAMIjB,EANJiB,MACAC,EAKIlB,EALJkB,YACKhB,EAIDF,EAJJG,IACA1C,EAGIuC,EAHJvC,UACA0D,EAEInB,EAFJmB,SACGd,EACC/D,OAAAgE,EAAA,EAAAhE,CAAA0D,EAAA,sDACEO,EAAUM,EAAIO,EAAE,OAAQ,MAAO3D,GAErC,OACEiD,EAAA7D,EAAAC,cAACoD,EAAD5D,OAAAqE,OAAA,CAAKlD,UAAW8C,GAAaF,GAC3BK,EAAA7D,EAAAC,cAAA,OAAKW,UAAWoD,EAAIQ,EAAE,WACnBJ,GAA0B,kBAAVA,EACfP,EAAA7D,EAAAC,cAACwE,EAAD,CAAYlB,KAAK,KAAK3C,UAAWoD,EAAIQ,EAAE,UACpCJ,GAGDA,EAEHC,GACCR,EAAA7D,EAAAC,cAACyE,EAAA,EAAD,CAAY9D,UAAWoD,EAAIQ,EAAE,eAC3BX,EAAA7D,EAAAC,cAAC0E,EAAA,EAAD,aACCN,EAAYO,QACXP,EAAYQ,IAAI,SAAAC,EAAmBC,GAAnB,IAAGC,EAAHF,EAAGE,KAAM9D,EAAT4D,EAAS5D,OAAT,OACd2C,EAAA7D,EAAAC,cAAC0E,EAAA,EAAD,CAAgBM,IAAKF,EAAO7D,OAAQA,GACjC8D,OAMZV,IAkBPH,EAAKJ,aAAe,CAClBT,IAAK,MACLc,MAAO,IAGMD,wCClEf,IAAAe,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAuBeO,IAnBK,WAClB,OAEEN,EAAApF,EAAAC,cAACqF,EAAA,EAAD,CAAO1E,UAAU,iBAAiB+E,SAAU,SAAAnB,GAAC,OAAIA,EAAEoB,mBAC/CR,EAAApF,EAAAC,cAACuF,EAAA,EAAD,KACIJ,EAAApF,EAAAC,cAACwF,EAAA,EAAD,KACML,EAAApF,EAAAC,cAACsF,EAAA,EAAD,CACEhC,KAAK,SACLsC,YAAY,2CACZjF,UAAU,uSCOxBkF,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAId,SAASC,EAAWlB,EAAMmB,EAAUC,EAAKC,EAAOC,GAC9C,MAAO,CAAEtB,OAAMmB,WAAUC,MAAKC,QAAOC,WAGvC,IAAMC,EAAO,CACXL,EAAW,OAAQ,IAAK,EAAK,GAAI,GACjCA,EAAW,OAAQ,IAAK,EAAK,GAAI,KACjCA,EAAW,OAAQ,IAAK,GAAM,GAAI,IAGrB,SAASM,EAAcC,GACpC,IAAM/C,EAAUoC,IAD2BxG,EAGjBC,oBAAS,GAHQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGpCoH,EAHoClH,EAAA,GAG7BmH,EAH6BnH,EAAA,GAMrCK,EAAS,kBAAM8G,GAAUD,IAG/B,OACIE,EAAA5G,EAAAC,cAAC4G,EAAA,EAAD,CAAgBC,UAAWC,KACzBH,EAAA5G,EAAAC,cAAC+G,EAAA,EAAD,CAAOpG,UAAW8C,EAAQsC,MAAOiB,aAAW,iBAC1CL,EAAA5G,EAAAC,cAACiH,EAAA,EAAD,KACEN,EAAA5G,EAAAC,cAACkH,EAAA,EAAD,KACEP,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,mBACAR,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBACAT,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBACAT,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,UAAjB,OACAT,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,UAAjB,YAGJT,EAAA5G,EAAAC,cAACqH,EAAA,EAAD,KACGf,EAAK1B,IAAI,SAAA0C,GAAG,OACTX,EAAA5G,EAAAC,cAACkH,EAAA,EAAD,CAAUlC,IAAKsC,EAAIvC,MACjB4B,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWN,UAAU,KAAKU,MAAM,OAC7BD,EAAIvC,MAEP4B,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIpB,UAC/BS,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAInB,KAC/BQ,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIlB,OAC/BO,EAAA5G,EAAAC,cAACmH,EAAA,EAAD,CAAWC,MAAM,UACfT,EAAA5G,EAAAC,cAACwH,EAAA,EAAD,CAASrD,MAAM,gBACbwC,EAAA5G,EAAAC,cAACyH,EAAA,EAAD,CAAMC,GAAG,yBACTf,EAAA5G,EAAAC,cAAC2H,EAAA,EAAD,CAAYX,aAAW,kBACrBL,EAAA5G,EAAAC,cAAC4H,EAAA,EAAD,CAAalH,KAAM,QAIvBiG,EAAA5G,EAAAC,cAACwH,EAAA,EAAD,CAASrD,MAAM,mBACbwC,EAAA5G,EAAAC,cAAC2H,EAAA,EAAD,CAAYX,aAAW,kBACrBL,EAAA5G,EAAAC,cAAE6H,EAAA,EAAF,CACAnH,KAAM,GAAIQ,QAAStB,UAM/B+G,EAAA5G,EAAAC,cAACiC,EAAA,EAAD,CAAO6F,OAAQrB,EAAO7G,OAAQA,GAC5B+G,EAAA5G,EAAAC,cAACkC,EAAA,EAAD,CAAatC,OAAQA,GAArB,mBACA+G,EAAA5G,EAAAC,cAAC+H,EAAA,EAAD,uDAGApB,EAAA5G,EAAAC,cAACgI,EAAA,EAAD,KACErB,EAAA5G,EAAAC,cAACiI,EAAA,EAAD,CAAQzH,MAAM,UAAUU,QAAStB,GAAjC,YAA2D,IAC3D+G,EAAA5G,EAAAC,cAACiI,EAAA,EAAD,CAAQzH,MAAM,YAAYU,QAAStB,GAAnC","file":"static/js/55.91e36289.chunk.js","sourcesContent":["import Page from 'components/Page';\nimport React,  { useState } from 'react';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  Row,\n  Alert,\n  TabContent, TabPane, Nav, NavItem, NavLink, CardTitle, CardText, \n} from 'reactstrap';\n\nimport { TiWarningOutline } from \"react-icons/ti\";\nimport {\nFaListAlt,FaVials\n} from 'react-icons/fa';\nimport SearchInput from 'components/SearchBox/SearchInput';\nimport classnames from 'classnames';\nimport DataTableList from 'components/DataTable/DataTable';\n\n\nconst CheckInPage = () => {\n    const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n\n  }\n  return (\n    <Page >\n       \n         <Row>\n         \n         <Col xl={6} lg={6} md={6}></Col>\n         <Col xl={6} lg={6} md={6}>\n            <div>\n                \n            </div>\n        </Col>\n        <Col xl={12} lg={12} md={12}>\n         <Alert color=\"primary\">\n                <TiWarningOutline \n                    size=\"30\"\n                    className=\" text-dark\"/>  { '  '} \n                    Note : Only checked in Patients can be search here\n            </Alert>\n        </Col>\n        </Row>\n\n      <Nav tabs>\n        \n        <NavItem>\n            <NavLink\n                className={classnames({ active: activeTab === '2' })}\n                onClick={() => { toggle('2'); }}\n                style={{ color : '#000'}}\n            >\n            <FaVials data-tip=\"Sample Collection\"/>\n            {' '} \n            <div>&nbsp;&nbsp;&nbsp;</div>Test Order\n            </NavLink>\n        </NavItem>\n        <NavItem>\n            <NavLink\n                className={classnames({ active: activeTab === '2' })}\n                onClick={() => { toggle('2'); }}\n                style={{ color : '#000'}}\n            >\n            <FaVials data-tip=\"Sample Collection\"/>\n            {' '} \n            <div>&nbsp;&nbsp;&nbsp;</div>Manifest\n            </NavLink>\n        </NavItem>\n        <NavItem>\n            <NavLink\n                className={classnames({ active: activeTab === '2' })}\n                onClick={() => { toggle('2'); }}\n                style={{ color : '#000'}}\n            >\n            <FaVials data-tip=\"Sample Collection\"/>\n            {' '} \n            <div>&nbsp;&nbsp;&nbsp;</div>Dispatched\n            </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { toggle('1'); }}\n            style={{ color : '#000'}}\n          >\n            <FaListAlt data-tip=\"Result\" />\n                {'  '} \n                <div>&nbsp;&nbsp;&nbsp;</div>Result\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"12\">\n            <Row >\n                <Col>\n                    <Card className=\"mb-12\">\n                    \n                    <CardHeader>List of Patient\n                        \n                    </CardHeader>\n                    \n                    <CardBody>\n                        <Form>\n                        <SearchInput />\n                        </Form>\n                    \n                    <br/>\n                        <Row>\n                        <Col>\n                            <Card body>\n\n                                <DataTableList />\n                            </Card>\n                        </Col>\n\n                        \n                        </Row>\n                    </CardBody>\n                    </Card>\n                </Col>\n                </Row>\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Row>\n            <Col sm=\"12\">\n              <Card body>\n                <CardTitle>Sample Collection</CardTitle>\n                <CardText>The collection form will be here</CardText>\n                \n              </Card>\n            </Col>\n            \n          </Row>\n        </TabPane>\n      </TabContent>\n\n</Page>\n\n  \n  );\n};\n\nexport default CheckInPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from 'react';\nimport { Form, Input } from 'reactstrap';\nimport {Card, CardContent} from '@material-ui/core';\n\nconst SearchInput = () => {\n  return (\n\n    <Form  className=\"cr-search-form\" onSubmit={e => e.preventDefault()} >\n        <Card>\n            <CardContent>\n                  <Input\n                    type=\"search\"\n                    placeholder=\"Search by Patient Name, Hospital Number \"\n                    className=\"cr-search-form__input pull-right\"\n                  />\n            </CardContent>\n        </Card>\n    </Form>\n\n\n  );\n};\n\nexport default SearchInput;\n","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n  FaPencilAlt\n} from 'react-icons/fa';\nimport {\n  MdDeleteForever\n} from 'react-icons/md';\nimport {Link} from 'react-router-dom';\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('1598', 159, 6.0, 24, 4.0),\n  createData('1234', 237, 9.0, 37, 4.3),\n  createData('5555', 262, 16.0, 24, 6.0),\n];\n\nexport default function DataTableList(props) {\n  const classes = useStyles();\n\n  const [modal, setModal] = useState(false);\n\n\n  const toggle = () => setModal(!modal);\n\n\n  return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"caption table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Patient ID</TableCell>\n              <TableCell align=\"center\">Patient Name</TableCell>\n              <TableCell align=\"center\">Phone Number</TableCell>\n              <TableCell align=\"center\">Age</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n                <TableRow key={row.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.calories}</TableCell>\n                  <TableCell align=\"center\">{row.fat}</TableCell>\n                  <TableCell align=\"center\">{row.carbs}</TableCell>\n                  <TableCell align=\"center\">\n                    <Tooltip title=\"Edit Patient\">\n                      <Link to=\"/patient-registration\">\n                      <IconButton aria-label=\"Collect Sample\">\n                        <FaPencilAlt size={20}/>\n                      </IconButton>\n                      </Link>\n                    </Tooltip>\n                    <Tooltip title=\"Achieve Patient\">\n                      <IconButton aria-label=\"Collect Sample\">\n                        < MdDeleteForever\n                        size={20} onClick={toggle}/>\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n            ))}\n            <Modal isOpen={modal} toggle={toggle}>\n              <ModalHeader toggle={toggle}>Archive Patient</ModalHeader>\n              <ModalBody>\n                Are you sure you want to archive this patient?\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={toggle}>Continue</Button>{' '}\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n              </ModalFooter>\n            </Modal>\n          </TableBody>\n        </Table>\n      </TableContainer>\n  );\n}\n"],"sourceRoot":""}