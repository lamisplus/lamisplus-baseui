{"version":3,"sources":["components/EAC/EacSearch.jsx","components/Typography.js","components/Page.js","components/SearchBox/SearchInput.jsx"],"names":["useStyles","makeStyles","theme","table","minWidth","button","margin","spacing","width","body1","fontWeight","createData","name","calories","fat","carbs","protein","gender","rows","PendingPrescription","props","classes","_useState","useState","_useState2","Object","_Users_matosky_lamis_ui_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","modal2","setModal2","toggle2","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","components_Page__WEBPACK_IMPORTED_MODULE_1__","title","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_5__","color","react_icons_ti__WEBPACK_IMPORTED_MODULE_17__","size","className","sm","reactstrap__WEBPACK_IMPORTED_MODULE_6__","body","reactstrap__WEBPACK_IMPORTED_MODULE_7__","components_SearchBox_SearchInput__WEBPACK_IMPORTED_MODULE_25__","_material_ui_core_TableContainer__WEBPACK_IMPORTED_MODULE_21__","component","Paper","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_18__","aria-label","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_22__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_23__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_20__","align","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_19__","map","row","key","scope","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_30__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_29__","_material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_27___default","onClick","react_router_dom__WEBPACK_IMPORTED_MODULE_28__","to","_material_ui_icons_ViewList__WEBPACK_IMPORTED_MODULE_26___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","for","reactstrap__WEBPACK_IMPORTED_MODULE_13__","type","id","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","restProps","objectWithoutProperties","classNames","defineProperty","react_default","assign","defaultProps","bem","bn","create","Page","breadcrumbs","children","b","e","components_Typography","Breadcrumb","BreadcrumbItem","length","_ref2","index","active","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","SearchInput","onSubmit","preventDefault"],"mappings":"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","file":"static/js/61.043f2b68.chunk.js","sourcesContent":["import Page from 'components/Page';\nimport React, {useState} from 'react';\nimport {\n    Card,\n    Col,\n    Form,\n    Row,\n    Alert,\n    Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input,\n} from 'reactstrap';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TiWarningOutline } from \"react-icons/ti\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SearchInput from 'components/SearchBox/SearchInput';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        minWidth: 650,\n    },\n    button: {\n        margin: theme.spacing(1),\n        width:200,\n    },\n    body1: {\n        fontWeight: 500,\n    },\n\n}));\n\nfunction createData(name, calories, fat, carbs, protein, gender) {\n    return { name, calories, fat, carbs, protein, gender };\n}\n\nconst rows = [\n    createData('1598', 'Alex Williams', 234567677, 3, 'Male'),\n    createData('1234', 'Ahmed Musa', +23456666443, 9, 'Male'),\n    createData('5555', 'Isaac Johnson',+2345567765, 6 , 'Female'),\n\n];\n\nconst PendingPrescription = (props) => {\n    const classes = useStyles();\n    const [modal2, setModal2] = useState(false);\n\n\n    const toggle2 = () => setModal2(!modal2);\n    return (\n        <Page title=\"Enchanced Adherence Counseling\" >\n            <Row>\n                <Col xl={12} lg={12} md={12}>\n                    <Alert color=\"primary\">\n                        <TiWarningOutline\n                            size=\"30\"\n                            className=\" text-dark\"/>  { '  '}\n                        Note : Only  HIV Positive Patients can be search here\n                    </Alert>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm=\"12\">\n                    <Card body>\n                        <Form>\n                            <SearchInput />\n                        </Form>\n                        <br/>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"caption table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Patient ID</TableCell>\n                                        <TableCell align=\"center\">Patient Name</TableCell>\n                                        <TableCell align=\"center\">Gender</TableCell>\n                                        <TableCell align=\"center\">Date of 1st EAC</TableCell>\n                                        <TableCell align=\"center\">Date of 2nd EAC</TableCell>\n                                        <TableCell align=\"center\">Date of 3rd EAC</TableCell>\n                                        <TableCell align=\"center\">Date of Repeact VL</TableCell>\n                                        <TableCell align=\"center\">Action</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {rows.map(row => (\n                                        <TableRow key={row.name}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell align=\"center\">{row.calories}</TableCell>\n                                            <TableCell align=\"center\">{row.fat}</TableCell>\n                                            <TableCell align=\"center\">{row.carbs}</TableCell>\n                                            <TableCell align=\"center\">{row.gender}</TableCell>\n                                            <TableCell align=\"center\">{row.gender}</TableCell>\n                                            <TableCell align=\"center\">{row.gender}</TableCell>\n                                            <TableCell align=\"center\">\n                                                <Tooltip title=\"Enroll Patient\">\n                                                    <IconButton aria-label=\"Collect Sample\">\n                                                        <AddCircleOutlineIcon size={20} onClick={toggle2}/>\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <Tooltip title=\"View EAC\">\n                                                    <Link to=\"/view-eac\">\n                                                        <IconButton aria-label=\"Collect Sample\">\n                                                            <ViewListIcon size={20}/>\n                                                        </IconButton>\n                                                    </Link>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                    <Modal isOpen={modal2} toggle={toggle2} size='lg'>\n                                        <ModalHeader toggle={toggle2}>Add New EAC</ModalHeader>\n                                        <ModalBody>\n                                            <Row>\n                                                <Col md={6}>\n                                                    <FormGroup>\n                                                        <Label for=\"hospitalNumber\">Date Of 1st EAC</Label>\n                                                        <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"First EAC\" />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <FormGroup>\n                                                        <Label for=\"hospitalNumber\">Date Of 2nd EAC</Label>\n                                                        <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Second EAC\" />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col md={6}>\n                                                    <FormGroup>\n                                                        <Label for=\"hospitalNumber\">Date Of 3rd EAC</Label>\n                                                        <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Third EAC\" />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col md={6}>\n                                                    <FormGroup>\n                                                        <Label for=\"hospitalNumber\">Date Of Repeact VL</Label>\n                                                        <Input type=\"text\" name=\"hospitalNumber\" id=\"hospitalNumber\" placeholder=\"Repeat VL\" />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </ModalBody>\n                                        <ModalFooter>\n                                                <Button color=\"primary\" onClick={toggle2}>Save</Button>\n                                            <Button color=\"secondary\" onClick={toggle2}>Close</Button>\n                                        </ModalFooter>\n                                    </Modal>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Card>\n                </Col>\n\n            </Row>\n\n        </Page>\n\n\n    );\n};\n\nexport default PendingPrescription;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from 'react';\nimport { Form, Input } from 'reactstrap';\nimport {Card, CardContent} from '@material-ui/core';\n\nconst SearchInput = () => {\n  return (\n\n    <Form  className=\"cr-search-form\" onSubmit={e => e.preventDefault()} >\n        <Card>\n            <CardContent>\n                  <Input\n                    type=\"search\"\n                    placeholder=\"Search by Patient Name, Hospital Number \"\n                    className=\"cr-search-form__input pull-right\"\n                  />\n            </CardContent>\n        </Card>\n    </Form>\n\n\n  );\n};\n\nexport default SearchInput;\n"],"sourceRoot":""}