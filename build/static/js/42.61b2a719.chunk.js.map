{"version":3,"sources":["actions/pharmacy.js","components/Pharmacy/PatientPrescriptions.js","api/index.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchPrescriptions","fetchPatientPrescriptions","updatePrescriptionStatus","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_api__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_2__","dispatch","axios","get","concat","url","then","response","console","log","type","ACTION_TYPES","payload","data","catch","error","patientId","formId","put","useStyles","makeStyles","table","minWidth","container","marginTop","width","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","textstyle","fontWeight","connect","state","prescriptions","pharmacy","patientPrescriptions","props","forms","location","patientName","classes","_useState","useState","_useState2","Object","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","modal2","setModal2","toggle2","className","_useState3","Date","_useState4","selectedDate","setSelectedDate","_useState5","_useState6","selectedTime","setSelectedTime","_useState7","_useState8","setSelectedText","_useState9","_useState10","quantityDispensed","handleChange","text","handleTimeChange","time","_useState11","_useState12","open","setOpen","handleClickOpen","handleClose","handleDispense","formData","encounterId","prescription_status","updatedData","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","useEffect","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","variant","map","form","react__WEBPACK_IMPORTED_MODULE_2__","key","id","_material_ui_core_TableContainer__WEBPACK_IMPORTED_MODULE_25__","component","Paper","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_22__","aria-label","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_26__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_27__","align","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_23__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_24__","generic_name","dosage","date_prescribed","date_dispensed","style","borderRadius","outline","onClick","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_8__","isOpen","toggle","size","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","xs","duration_unit","dosage_frequency","start_date","comment","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_15__","onClose","aria-labelledby","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_18__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_19__","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_30__","utils","DateFnsUtils","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_31__","margin","label","format","value","onChange","date","KeyboardButtonProps","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_32__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_29__","autoFocus","fullWidth","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_17__","LABSERVICECODE"],"mappings":"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","file":"static/js/42.61b2a719.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { url } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n/**\n * ===============================================================================\n * @Actions\n * Encounter CRUD OPERATIONS\n * returns API response from server => payload: response || error\n * @method GET => fetchPrescriptions() -> get all encounters: params {null} || query {dateStart}{dateEnd}\n *@method GET => fetchPatientPrescriptions() -> get all prescriptions for a patient: params {patientId} || query {}\n *================================================================================\n */\n\nexport const fetchPrescriptions = () => dispatch => {\n  axios\n    .get(\n      `${url}encounters/4ab293ff-6837-41e8-aa85-14f25ce59ef0/{dateStart}/{dateEnd}`\n    )\n    .then((response) => {\n      console.log(response)\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_FETCH_PRESCRIPTIONS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_ERROR,\n        payload: \"Something went wrong\",\n      });\n    });\n};\n\nexport const fetchPatientPrescriptions = (patientId) => dispatch => {\n  console.log(patientId)\n  axios\n    .get(\n      `${url}patients/${patientId}/encounters/4ab293ff-6837-41e8-aa85-14f25ce59ef0/{dateStart}/{dateEnd}`\n    )\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_PATIENT_PRESCRIPTIONS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      console.log(\"Pharmacy Error: \", error);\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_ERROR,\n        payload: \"Something went wrong\",\n      });\n    });\n\n}\n// export const fetchEncounterById = (encounterId) => (dispatch) => {\n//          console.log(encounterId);\n//          axios\n//            .get(\n//              `${url}encounters/${encounterId}/form-data`\n//            )\n//            .then((response) => {\n//              dispatch({\n//                type: ACTION_TYPES.FETCH_ENCOUNTER_BY_ID,\n//                payload: response.data,\n//              });\n//            })\n//            .catch((error) => {\n//              console.log(\"Pharmacy Error: \", error);\n//              dispatch({\n//                type: ACTION_TYPES.PHARMACY_ERROR,\n//                payload: \"Something went wrong\",\n//              });\n//            });\n// };\n       \n// axios.put(`${url}form-data/${formId}`)\nexport const updatePrescriptionStatus = (formId, data) => (dispatch) => {\n         axios\n           .put( `${url}form-data/${formId}`, data)\n           .then((response) => {\n             dispatch({\n               type: ACTION_TYPES.UPDATE_PRESCRIPTION_STATUS,\n               payload: response.data,\n             });\n           })\n           .catch((error) => {\n             console.log(\"Pharmacy Error: \", error);\n             dispatch({\n               type: ACTION_TYPES.PHARMACY_ERROR,\n               payload: \"Something went wrong\",\n             });\n           });\n       };\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'date-fns';\nimport \"./patientPrescriptions.css\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport {\n  fetchPatientPrescriptions,\n  updatePrescriptionStatus,\n} from \"../../actions/pharmacy\";\nimport { connect } from 'react-redux'\nimport { Divider } from \"@material-ui/core\";\n\nimport {\n  Col,\n  Row,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  container: {\n    marginTop: \"5rem\",\n    width: \"88%\"\n  },\n});\n\nconst color = \"#1D4380\"\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor : color,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst textstyle = {\n  fontSize: \"14px\",\n  fontWeight: \"bolder\"\n};\n\nconst PatientPrescriptions = props => {\n  const forms = props.location.forms;\n  const patientName = props.location.patientName;\n  const classes = useStyles();\n  \n   const [modal2, setModal2] = useState(false);\n  const toggle2 = () => setModal2(!modal2);\n\n  const { className } = props;\n\nconst [selectedDate, setSelectedDate] = useState(new Date('2014-08-18T21:11:54'));\nconst [selectedTime, setSelectedTime] = useState(new Date('2014-08-18T21:11:54'));\nconst [selectedText, setSelectedText] = useState(\" \");\nconst [quantityDispensed, setQuantityDispensed] = useState(0);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleChange = (text) => {\n    setSelectedText(text);\n  }\n  const handleTimeChange = (time) => {\n    setSelectedTime(time);\n  }\n\n  const handleQuantityChange = () => {\n    setQuantityDispensed();\n  };\n  const handleTextChange = () => {\n    setQuantityDispensed();\n  };\n  \n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDispense = (formData, formId, encounterId) => {\n    formData.prescription_status = 1;\n    const updatedData= {\n      data: { ...formData }\n    }\n    props.updatePrescriptionStatus(formId, updatedData);\n    console.log(formId)\n    setOpen(false);\n  };\n\n  useEffect(() => {\n   \n  })\n  \n\n  return (\n    <div className=\"patpres\">\n      <h2>Pharmacy</h2>\n      <Divider variant=\"middle\" />\n      <br />\n      <br />\n      {props.location.forms ? (\n        forms.map((form) => (\n          <Fragment key={form.id}>\n            <h5>View prescription - 012345678</h5>\n            <div className=\"info_box\">\n              <p> {patientName} ( 012345678) | 23 years</p>\n              <p> Female </p>\n            </div>\n\n            <TableContainer component={Paper} className={classes.container}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell>Name</StyledTableCell>\n                    <StyledTableCell align=\"right\">Dosage</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      Date Prescribed\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      Date dispensed\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">Action</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      View Details\n                    </StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {forms.map((form) => (\n                    <TableRow key={form.id}>\n                      <TableCell>{form.data.generic_name}</TableCell>\n                      <TableCell align=\"right\">{form.data.dosage}</TableCell>\n                      <TableCell align=\"right\">\n                        {form.data.date_prescribed}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {form.data.date_dispensed}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {form.data.prescription_status == 0 ? (\n                          <button\n                            style={{\n                              marginTop: \"5px\",\n                              borderRadius: \"3px\",\n                              outline: \"none\",\n                              backgroundColor: \"#40b02c\",\n                              color: \"#ffffff\",\n                            }}\n                            onClick={handleClickOpen}\n                          >\n                            dispense\n                          </button>\n                        ) : (\n                          <button\n                            style={{\n                              marginTop: \"5px\",\n                              borderRadius: \"3px\",\n                              outline: \"none\",\n                            }}\n                            disabled\n                          >\n                            dispense\n                          </button>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <Modal\n              isOpen={modal2}\n              toggle={toggle2}\n              className={className}\n              size=\"lg\"\n            >\n              <ModalHeader toggle={toggle2}>Prescription Details</ModalHeader>\n              <ModalBody>\n                <Row style={{ marginTop: \"20px\" }}>\n                  <Col xs=\"12\">\n                    Drug Name\n                    <br />\n                    <p style={textstyle}>{form.data.generic_name} </p>\n                  </Col>\n                  <Col xs=\"4\">\n                    Dosage\n                    <br />\n                    <p style={textstyle}>{form.data.dosage}</p>\n                  </Col>\n                  <Col xs=\"4\">\n                    Unit\n                    <br />\n                    <p style={textstyle}>{form.data.duration_unit}</p>\n                  </Col>\n                  <Col xs=\"4\">\n                    Frequency\n                    <br />\n                    <p style={textstyle}>\n                      {form.data.dosage_frequency} time(s) daily\n                    </p>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"20px\" }}>\n                  <Col xs=\"4\">\n                    Start Date\n                    <br />\n                    <p style={textstyle}>{form.data.start_date}</p>\n                  </Col>\n                  <Col xs=\"12\">Additional Information</Col>\n                  <hr />\n                  <Col xs=\"4\">\n                    Instruction\n                    <br />\n                    <p style={textstyle}>{form.data.comment}</p>\n                  </Col>\n                  <Col xs=\"4\">\n                    Additional Instruction\n                    <br />\n                    <p style={textstyle}>\n                      {form.data.comment ? form.data.comment : \"None\"}\n                    </p>\n                  </Col>\n                </Row>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={toggle2}>\n                  Close\n                </Button>\n              </ModalFooter>\n            </Modal>\n            <Dialog\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">\n                Dispense Prescription\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  Please fill in the details below to dispense{\" \"}\n                  {form.data.generic_name} for {patientName} <br /> Qty\n                  Prescribed: 10\n                </DialogContentText>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Enter date dispensed\"\n                    format=\"MM/dd/yyyy\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\",\n                    }}\n                  />\n                  <br />\n                  <br />\n                  <KeyboardTimePicker\n                    margin=\"normal\"\n                    id=\"time-picker\"\n                    label=\"Enter time dispensed\"\n                    value={selectedTime}\n                    onChange={handleTimeChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change time\",\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n                <br />\n                <br />\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Quantity Dispensed\"\n                  type=\"number\"\n                  value={quantityDispensed}\n                  onChange={handleChange}\n                />\n                <br />\n                <br />\n                <TextField\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Additional Comments\"\n                  type=\"text\"\n                  onChange={handleChange}\n                  fullWidth\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"danger\">\n                  cancel\n                </Button>\n                <Button onClick={handleDispense} color=\"primary\">\n                  save\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Fragment>\n        ))\n      ) : (\n        <h2 style={{ margin: \"auto\" }}>No Prescriptions</h2>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    prescriptions: state.pharmacy.patientPrescriptions,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  fetchPatientPrescriptions,\n  updatePrescriptionStatus,\n})(PatientPrescriptions);\n","export const url = 'http://lamisplus.org/base-module/api/';\nexport const HIVSERVICECODE = \"\";\nexport const LABSERVICECODE = \"87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e\";\nexport const PHARMACYSERVICECODE = \"\";\n"],"sourceRoot":""}