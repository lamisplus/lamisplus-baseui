{"version":3,"sources":["components/FormManager/FormBuilder.jsx","components/Typography.js","components/Page.js"],"names":["Create","props","_React$useState","React","useState","_React$useState2","Object","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setRes","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","components_Page__WEBPACK_IMPORTED_MODULE_3__","title","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","react_formio__WEBPACK_IMPORTED_MODULE_5__","errors","form","display","saveText","onChange","schema","console","log","JSON","stringify","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","objectWithoutProperties","classes","classNames","defineProperty","react_default","assign","defaultProps","bem","bn","create","Page","breadcrumbs","children","b","e","components_Typography","Breadcrumb","BreadcrumbItem","length","map","_ref2","index","name","active","key"],"mappings":"iLAuDeA,UAjDA,SAAAC,GAAS,IAAAC,EACAC,IAAMC,SAAS,IADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACVM,GADUH,EAAA,GAAAA,EAAA,IAEtB,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAM,gBACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACGL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACAN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACK,EAAA,OAAD,CAAQC,OAAQhB,EAAMgB,SACtBR,EAAAC,EAAAC,cAACK,EAAA,YAAD,CAAaE,KAAM,CAACC,QAAS,QAASC,SAAU,cAAeC,SAAU,SAACC,GACxEC,QAAQC,IAAIC,KAAKC,UAAUJ,IAC3Bd,EAAOiB,KAAKC,UAAUJ,OAExBb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,oJCjBIgB,EAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,cAKRC,EAAa,SAAAC,GAAiD,IAE9DC,EAFqBC,EAAyCF,EAA9CG,IAAUC,EAAoCJ,EAApCI,UAAWC,EAAyBL,EAAzBK,KAASC,EAAgB1C,OAAA2C,EAAA,EAAA3C,CAAAoC,EAAA,4BAC5DQ,EAAUC,IAAW7C,OAAA8C,EAAA,EAAA9C,CAAA,GAAGyC,IAASA,GAAQD,GAW/C,OAPEH,EADEC,KAEQA,GAAOjB,EAAOoB,GACbpB,EAAOoB,GAEP,KAGNM,EAAA3C,EAAAC,cAACgC,EAADrC,OAAAgD,OAAA,GAAcN,EAAd,CAAyBF,UAAWI,MAS7CT,EAAWc,aAAe,CACxBR,KAAM,KAGON,QCtCTe,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAAjB,GAOP,IANJ7B,EAMI6B,EANJ7B,MACA+C,EAKIlB,EALJkB,YACKhB,EAIDF,EAJJG,IACAC,EAGIJ,EAHJI,UACAe,EAEInB,EAFJmB,SACGb,EACC1C,OAAA2C,EAAA,EAAA3C,CAAAoC,EAAA,sDACEQ,EAAUM,EAAIM,EAAE,OAAQ,MAAOhB,GAErC,OACEO,EAAA3C,EAAAC,cAACiC,EAADtC,OAAAgD,OAAA,CAAKR,UAAWI,GAAaF,GAC3BK,EAAA3C,EAAAC,cAAA,OAAKmC,UAAWU,EAAIO,EAAE,WACnBlD,GAA0B,kBAAVA,EACfwC,EAAA3C,EAAAC,cAACqD,EAAD,CAAYjB,KAAK,KAAKD,UAAWU,EAAIO,EAAE,UACpClD,GAGDA,EAEH+C,GACCP,EAAA3C,EAAAC,cAACsD,EAAA,EAAD,CAAYnB,UAAWU,EAAIO,EAAE,eAC3BV,EAAA3C,EAAAC,cAACuD,EAAA,EAAD,aACCN,EAAYO,QACXP,EAAYQ,IAAI,SAAAC,EAAmBC,GAAnB,IAAGC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,OAAT,OACdnB,EAAA3C,EAAAC,cAACuD,EAAA,EAAD,CAAgBO,IAAKH,EAAOE,OAAQA,GACjCD,OAMZV,IAkBPF,EAAKJ,aAAe,CAClBV,IAAK,MACLhC,MAAO,IAGM8C","file":"static/js/44.62959a0a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Page from 'components/Page';\nimport { connect } from 'react-redux';\nimport { saveForm, selectError, FormEdit, Errors, FormBuilder } from 'react-formio';\nimport {Card,CardContent,} from '@material-ui/core';\n\nconst Create = props => {\n  const [res, setRes] = React.useState([]);\n  return (\n    <Page title=\"Form Builder\" >\n   <Card >\n      <CardContent>\n      <h4>Create Form</h4>\n      <hr />\n      <Errors errors={props.errors} />\n      <FormBuilder form={{display: 'form'}} saveText={'Create Form'} onChange={(schema) => {\n        console.log(JSON.stringify(schema));\n        setRes(JSON.stringify(schema));\n        }} />\n      <br></br>\n      <div>\n  <h4>Json Form</h4>\n      \n        \n      </div>\n    </CardContent>\n    </Card>\n    </Page>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    form: {display: 'form'},\n    saveText: 'Create Form',\n    errors: selectError('form', state),\n    response: 'res'\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveForm: (form) => {\n      const newForm = {\n        ...form,\n        tags: ['common'],\n      };\n      dispatch(saveForm('form', newForm, (err, form) => {\n        console.log('stroing form');\n        console.log(newForm); \n      }))\n    }\n  }\n}\n\nexport default Create\n\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}