{"version":3,"sources":["components/Hiv/SearchForm/Search.jsx","components/Hiv/EnrollmentList.jsx","components/Typography.js","components/Page.js"],"names":["GreenCheckbox","withStyles","root","color","green","&$checked","checked","props","react_default","a","createElement","Checkbox","Object","assign","SearchInput","name","_React$useState","React","useState","checkedG","_React$useState2","slicedToArray","state","setState","Form","className","onSubmit","e","preventDefault","Card_Card","CardContent","Input","type","placeholder","FormControlLabel","control","onChange","event","objectSpread","defineProperty","target","value","label","useStyles","makeStyles","theme","table","minWidth","button","margin","spacing","width","body1","fontWeight","createData","calories","fat","carbs","protein","gender","rows","PendingPrescription","classes","Page","title","Row","Col","xl","lg","md","Alert","index_esm","size","sm","Card","body","react_router_dom","to","Button","fa_index_esm","Search","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","Typography","variant","display","gutterBottom","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","_ref","TypoComp","Tag","tag","restProps","objectWithoutProperties","classNames","defaultProps","bem","bn","create","breadcrumbs","children","b","components_Typography","Breadcrumb","BreadcrumbItem","length","_ref2","index","active"],"mappings":"oXASMA,EAAgBC,YAAW,CAC/BC,KAAM,CACJC,MAAOC,IAAM,KACbC,YAAa,CACXF,MAAOC,IAAM,OAGjBE,QAAS,IAPWL,CAQnB,SAAAM,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAUV,MAAM,WAAcI,MAwC3BO,EAtCK,WAAM,IAKHC,EALGC,EACEC,IAAMC,SAAS,CACvCC,UAAU,IAFYC,EAAAR,OAAAS,EAAA,EAAAT,CAAAI,EAAA,GACjBM,EADiBF,EAAA,GACVG,EADUH,EAAA,GAUxB,OAEEZ,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,UAAU,iBAAiBC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAC/CpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACMtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,KAAK,SACLC,YAAY,2CACZR,UAAU,qCAEZjB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,QACE3B,EAAAC,EAAAC,cAACV,EAAD,CACEM,QAASgB,EAAMH,SACfiB,UAnBDrB,EAmBwB,WAnBhB,SAAAsB,GAC3Bd,EAASX,OAAA0B,EAAA,EAAA1B,CAAA,GAAKU,EAANV,OAAA2B,EAAA,EAAA3B,CAAA,GAAcG,EAAOsB,EAAMG,OAAOlC,aAmBtBmC,MAAM,aAGVC,MAAM,+BCrBpBC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,SAAU,KAEZC,OAAQ,CACNC,OAAQJ,EAAMK,QAAQ,GACtBC,MAAM,KAERC,MAAO,CACLC,WAAY,QAKhB,SAASC,EAAWvC,EAAMwC,EAAUC,EAAKC,EAAOC,EAASC,GACvD,MAAO,CAAE5C,OAAMwC,WAAUC,MAAKC,QAAOC,UAASC,UAGhD,IAAMC,EAAO,CACXN,EAAW,OAAQ,gBAAiB,UAAW,EAAG,QAClDA,EAAW,OAAQ,aAAc,YAAc,EAAG,QAClDA,EAAW,OAAQ,gBAAgB,WAAa,EAAI,WA4EvCO,UAzEa,SAACtD,GAEzB,IAAMuD,EAAUnB,IAClB,OACEnC,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAMC,MAAM,cACRxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACAzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvB7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAOnE,MAAM,WACPK,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACIC,KAAK,KACL/C,UAAU,eAHpB,KAGsC,KAHtC,8CASIjB,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKO,GAAG,MAENjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,MAAI,GACRnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAG,sBACLrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQ3E,MAAM,UAAUsB,UAAU,qBAC1BjB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,MADR,uBAIJvE,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACsE,EAAD,OAEAxE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAgBC,UAAWC,KACzB3E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAO3D,UAAWqC,EAAQhB,MAAOuC,aAAW,iBAC5C7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACI9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,KACA/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,mBACAhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBACAjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBACAjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAjB,OACAjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAjB,UACAjF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAjB,YAGJjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACK9B,EAAK+B,IAAI,SAAAC,GAAG,OACTpF,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAUM,IAAKD,EAAI7E,MACnBP,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWN,UAAU,KAAKY,MAAM,OAC3BF,EAAI7E,MAETP,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAIrC,UAC/B/C,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAIpC,KAC/BhD,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAInC,OAC/BjD,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UAAUG,EAAIjC,QAC/BnD,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,MAAM,UACTjF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAYC,QAAQ,UAAUvE,UAAU,eAAiBwE,QAAQ,QAASC,cAAY,GAClF1F,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAYP,KAAK,OACjBhE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,GAAG,mBAAT,wJCpGtCsB,EAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,cAKRjB,EAAa,SAAAkB,GAAiD,IAE9DC,EAFqBC,EAAyCF,EAA9CG,IAAU3F,EAAoCwF,EAApCxF,UAAWO,EAAyBiF,EAAzBjF,KAASqF,EAAgBzG,OAAA0G,EAAA,EAAA1G,CAAAqG,EAAA,4BAC5DnD,EAAUyD,IAAW3G,OAAA2B,EAAA,EAAA3B,CAAA,GAAGoB,IAASA,GAAQP,GAW/C,OAPEyF,EADEC,KAEQA,GAAOhB,EAAOnE,GACbmE,EAAOnE,GAEP,KAGNxB,EAAAC,EAAAC,cAACwG,EAADtG,OAAAC,OAAA,GAAcwG,EAAd,CAAyB5F,UAAWqC,MAS7CiC,EAAWyB,aAAe,CACxBxF,KAAM,KAGO+D,QCtCT0B,EAAMC,IAAGC,OAAO,QAEhB5D,EAAO,SAAAkD,GAOP,IANJjD,EAMIiD,EANJjD,MACA4D,EAKIX,EALJW,YACKT,EAIDF,EAJJG,IACA3F,EAGIwF,EAHJxF,UACAoG,EAEIZ,EAFJY,SACGR,EACCzG,OAAA0G,EAAA,EAAA1G,CAAAqG,EAAA,sDACEnD,EAAU2D,EAAIK,EAAE,OAAQ,MAAOrG,GAErC,OACEjB,EAAAC,EAAAC,cAACyG,EAADvG,OAAAC,OAAA,CAAKY,UAAWqC,GAAauD,GAC3B7G,EAAAC,EAAAC,cAAA,OAAKe,UAAWgG,EAAI9F,EAAE,WACnBqC,GAA0B,kBAAVA,EACfxD,EAAAC,EAAAC,cAACqH,EAAD,CAAY/F,KAAK,KAAKP,UAAWgG,EAAI9F,EAAE,UACpCqC,GAGDA,EAEH4D,GACCpH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAYvG,UAAWgG,EAAI9F,EAAE,eAC3BnB,EAAAC,EAAAC,cAACuH,EAAA,EAAD,aACCL,EAAYM,QACXN,EAAYjC,IAAI,SAAAwC,EAAmBC,GAAnB,IAAGrH,EAAHoH,EAAGpH,KAAMsH,EAATF,EAASE,OAAT,OACd7H,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAgBpC,IAAKuC,EAAOC,OAAQA,GACjCtH,OAMZ8G,IAkBP9D,EAAKyD,aAAe,CAClBJ,IAAK,MACLpD,MAAO,IAGMD","file":"static/js/72.3d4a3b06.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input } from 'reactstrap';\nimport {Card, CardContent} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst SearchInput = () => {\n  const [state, setState] = React.useState({\n    checkedG: false,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n\n  return (\n\n    <Form  className=\"cr-search-form\" onSubmit={e => e.preventDefault()} >\n        <Card>\n            <CardContent>\n                  <Input\n                    type=\"search\"\n                    placeholder=\"Search by Patient Name, Hospital Number \"\n                    className=\"cr-search-form__input pull-right\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <GreenCheckbox\n                        checked={state.checkedG}\n                        onChange={handleChange('checkedG')}\n                        value=\"checkedG\"\n                      />\n                    }\n                    label=\"Only Referred Patients\"\n                  />\n            </CardContent>\n        </Card>\n    </Form>\n\n\n  );\n};\n\nexport default SearchInput;","import Page from 'components/Page';\nimport React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Row,\n  Alert,\n  Button,\n} from 'reactstrap';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TiWarningOutline } from \"react-icons/ti\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    FaUserPlus,\n} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport SearchTestOrder from 'components/Hiv/SearchForm/Search';\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  button: {\n    margin: theme.spacing(1),\n    width:200,\n  },\n  body1: {\n    fontWeight: 500,\n  },\n\n}));\n\nfunction createData(name, calories, fat, carbs, protein, gender) {\n  return { name, calories, fat, carbs, protein, gender };\n}\n\nconst rows = [\n  createData('1598', 'Alex Williams', 234567677, 3, 'Male'),\n  createData('1234', 'Ahmed Musa', +23456666443, 9, 'Male'),\n  createData('5555', 'Isaac Johnson',+2345567765, 6 , 'Female'),\n];\n\nconst PendingPrescription = (props) => {\n \n    const classes = useStyles();\n  return (\n    <Page title=\"ART Clinic\" >     \n        <Row>        \n        <Col xl={12} lg={12} md={12}>\n          <Alert color=\"primary\">\n                <TiWarningOutline \n                    size=\"30\"\n                    className=\" text-dark\"/>  { '  '} \n                    Note : Only  Patients can be search here\n            </Alert>\n          </Col>\n        </Row>\n\n              <Row>          \n                <Col sm=\"12\">\n                \n                  <Card body>\n                    <Link to=\"/enrolled-patients\">\n                        <Button color=\"primary\" className=\" float-right mr-1\" >\n                                <FaUserPlus/> Enrolled Patients\n                        </Button>\n                    </Link>\n                    <Form>\n                      <SearchTestOrder />\n                    </Form>          \n                      <br/>\n                      <TableContainer component={Paper}>                \n                        <Table className={classes.table} aria-label=\"caption table\">\n                        <TableHead>\n                            <TableRow>\n                            <TableCell>Patient ID</TableCell>\n                            <TableCell align=\"center\">Patient Name</TableCell>\n                            <TableCell align=\"center\">Phone Number</TableCell>\n                            <TableCell align=\"center\">Age</TableCell>\n                            <TableCell align=\"center\">Gender</TableCell>\n                            <TableCell align=\"center\">Action</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map(row => (\n                                <TableRow key={row.name}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"center\">{row.calories}</TableCell>\n                                <TableCell align=\"center\">{row.fat}</TableCell>\n                                <TableCell align=\"center\">{row.carbs}</TableCell>\n                                <TableCell align=\"center\">{row.gender}</TableCell>\n                                <TableCell align=\"center\">\n                                        <Typography variant=\"caption\" className=\"text-primary\"   display=\"block\"  gutterBottom>\n                                            <FaUserPlus size=\"20\"/>\n                                            <Link to=\"/enroll-patient\"> Enroll Patient</Link>\n                                        </Typography>                                    \n                                </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                        </Table>\n                    </TableContainer>       \n                  </Card>\n                </Col>\n                \n              </Row>\n       \n</Page>\n\n  \n  );\n};\n\nexport default PendingPrescription;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}