{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Dashboard.js","main/webapp/components/Consultation/DataTableList.js","main/webapp/pages/ConsultationPage.js","main/webapp/components/Typography.js","main/webapp/components/Page.js"],"names":["Dashboard","Object","createSvgIcon","react_default","a","createElement","d","FilterComponent","_ref","filterText","onFilter","onClear","Form","className","onSubmit","e","preventDefault","Card","CardContent","Input","type","placeholder","value","onChange","SampleExpandedComponent","_ref2","data","dateRegistration","dob","columns","name","selector","sortable","Display","cell","row","firstName","lastName","IconButton","color","aria-label","title","react_router_dom","to","pathname","state","getpatient","ignoreRowClick","allowOverflow","button","customStyles","headCells","style","fontSize","fontWeight","BasicTable","_React$useState","React","useState","_React$useState2","slicedToArray","setFilterText","_React$useState3","_React$useState4","resetPaginationToggle","setResetPaginationToggle","_useState","_useState2","setData","filteredItems","filter","item","toLowerCase","includes","hospitalNumber","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","response","result","wrap","_context","prev","next","fetch","url","sent","json","console","log","t0","stop","apply","this","arguments","fetchData","subHeaderComponentMemo","useMemo","DataTableList_FilterComponent","target","index_cjs_default","pagination","paginationResetDefaultPage","subHeader","subHeaderComponent","highlightOnHover","striped","subHeaderAlign","fixedHeader","expandableRows","persistTableHead","expandableRowsComponent","DataTableList_SampleExpandedComponent","useStyles","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","ConsultationPage","classes","Page","Alert","index_esm","size","cardBottom","DataTableList","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","TypoComp","Tag","tag","restProps","objectWithoutProperties","classNames","defineProperty","assign","defaultProps","bem","bn","create","breadcrumbs","children","b","components_Typography","Breadcrumb","BreadcrumbItem","length","map","index","active","key"],"mappings":"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","file":"static/js/38.8d7a72c3.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\"\n}), 'Dashboard');","import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport {Card, CardContent} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Dashboard} from '@material-ui/icons';\nimport './PatientSearch.css';\nimport {Input,Form} from 'reactstrap';\nimport {url} from 'api/index';\nimport {Link} from 'react-router-dom';\n\n/**Find table documentations at\n import TablePagination from '@material-ui/core/TablePagination'; * 1.https://www.npmjs.com/package/react-data-table-component#storybook-dependencies----rootdirstoriespackagejson\n import TableRow from '@material-ui/core/TableRow'; * 2. https://jbetancur.github.io/react-data-table-component/?path=/story/conditional-styling--conditional-cells */\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <Form className='cr-search-form' onSubmit={e => e.preventDefault()}>\n    <Card>\n      <CardContent>\n        <Input\n          type='search'\n          placeholder='Search by Patient Name, Patient ID '\n          className='cr-search-form__input pull-right'\n          value={filterText}\n          onChange={onFilter}\n        />\n      </CardContent>\n    </Card>\n  </Form>\n)\n\nconst SampleExpandedComponent = ({ data }) => (\n  <div>\n    <span>\n      <b> Date Of Registration:</b> {data.dateRegistration}{' '}\n    </span>{' '}\n    <br></br>{' '}\n    <span>\n      <b>Date Of Birth:</b> {data.dob}{' '}\n    </span>\n  </div>\n)\n\n\nconst columns = [\n  {\n    name: 'Patient ID',\n    selector: 'hospitalNumber',\n    sortable: false,\n    Display: true\n  },\n  {\n    name: 'Patient Name',\n    selector: 'name',\n    sortable: false,\n    cell: row => (\n      <span>\n        {row.firstName} {row.lastName}\n      </span>\n    )\n  },\n  {\n    name: 'Start Visit',\n    selector: 'dateVisitStart',\n    sortable: false,\n  },\n  {\n    name: 'Action',\n    cell: row =>\n        <div>\n          <IconButton color=\"primary\"  aria-label=\"View Patient\" title=\"View Patient\">\n            <Link to={{ pathname: '/patient-dashboard', state: { getpatient: {row}} }}>\n            <Dashboard title=\"Patient Dashboard\"   aria-label=\"View Patient\"/>\n            </Link>\n          </IconButton>\n        </div>,\n    ignoreRowClick: true,\n    allowOverflow: true,\n    button: true\n  }\n]\nconst customStyles = {\n  headCells: {\n    style: {\n      color: '#202124',\n      fontSize: '14px',\n      fontWeight: 'bold'\n    }\n  }\n}\n\nconst BasicTable = () => {\n  const [filterText, setFilterText] = React.useState('')\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  )\n  const [data, setData] = useState([])\n  const filteredItems = data.filter(item => (item.firstName && item.firstName.toLowerCase().includes(filterText.toLowerCase())) || (item.lastName && item.lastName.toLowerCase().includes(filterText.toLowerCase())) || (item.hospitalNumber && item.hospitalNumber.toLowerCase().includes(filterText.toLowerCase())));\n\n  useEffect(() => {\n    async function fetchData() {\n      try{\n        const response = await fetch(url+\"patients\");\n        const result = await response.json();\n        setData(result);\n        console.log(result);\n      }catch(error){\n        setData([]);\n      }\n    }\n    fetchData()\n  }, [])\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle)\n        setFilterText('')\n      }\n    }\n\n    return (\n      <FilterComponent\n        onFilter={e => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    )\n  }, [filterText, resetPaginationToggle])\n\n  return (\n    <div>\n      <DataTable\n        columns={columns}\n        data={filteredItems}\n        customStyles={customStyles}\n        pagination\n        paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\n        subHeader\n        subHeaderComponent={subHeaderComponentMemo}\n        highlightOnHover={true}\n        striped={true}\n        subHeaderAlign={'left'}\n        // noHeader={false}\n        fixedHeader={true}\n        expandableRows\n        persistTableHead\n        expandableRowsComponent={<SampleExpandedComponent />}\n      />\n    </div>\n  )\n}\n\nexport default BasicTable\n","import Page from 'components/Page';\nimport React from 'react';\nimport {\n  Alert\n} from 'reactstrap';\nimport { \n    Card,\n    CardContent,   \n}\nfrom '@material-ui/core';\nimport { TiWarningOutline } from \"react-icons/ti\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableData from 'components/Consultation/DataTableList';\n\n  const useStyles = makeStyles(theme => ({\n    card: {\n      margin: theme.spacing(20),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center', \n    },\n    \n  }));\n\nconst ConsultationPage = () => {\n    const classes = useStyles();\n  return (\n    <Page title=\"Consultation\" >\n        <Alert color=\"primary\">\n            <TiWarningOutline \n                size=\"30\"\n                className=\" text-dark\"/>  { '  '} \n                Note : Only checked in Patients can be search here\n            </Alert>\n        <Card className={classes.cardBottom}>  \n            <CardContent>\n                {/* Search Form Input Field */}\n\n                <br/>\n                <TableData />\n                   \n            </CardContent>\n        </Card>\n        \n</Page>\n  );\n};\n\nexport default ConsultationPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}