{"version":3,"sources":["actions/pharmacy.js","components/Pharmacy/PatientPrescriptions.js","api/index.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchPrescriptions","fetchPatientPrescriptions","updatePrescriptionStatus","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_api__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_2__","dispatch","axios","get","concat","url","then","response","console","log","type","ACTION_TYPES","payload","data","catch","error","patientId","formId","put","useStyles","makeStyles","table","minWidth","container","marginTop","width","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","textstyle","fontWeight","connect","state","prescriptions","pharmacy","patientPrescriptions","props","forms","location","patientName","classes","_useState","useState","_useState2","Object","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","modal2","setModal2","toggle2","className","_useState3","_useState4","open","setOpen","handleClickOpen","handleClose","useEffect","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","variant","map","form","react__WEBPACK_IMPORTED_MODULE_1__","key","id","_material_ui_core_TableContainer__WEBPACK_IMPORTED_MODULE_22__","component","Paper","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_19__","aria-label","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_23__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_24__","align","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_20__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_21__","generic_name","dosage","date_prescribed","date_dispensed","prescription_status","style","borderRadius","outline","onClick","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","toggle","size","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xs","duration_unit","dosage_frequency","start_date","comment","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_13__","onClose","aria-labelledby","aria-describedby","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_14__","formData","autoFocus","margin","LABSERVICECODE"],"mappings":"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","file":"static/js/40.28c8c6aa.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { url } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n/**\n * ===============================================================================\n * @Actions\n * Encounter CRUD OPERATIONS\n * returns API response from server => payload: response || error\n * @method GET => fetchPrescriptions() -> get all encounters: params {null} || query {dateStart}{dateEnd}\n *@method GET => fetchPatientPrescriptions() -> get all prescriptions for a patient: params {patientId} || query {}\n *================================================================================\n */\n\nexport const fetchPrescriptions = () => dispatch => {\n  axios\n    .get(\n      `${url}encounters/4ab293ff-6837-41e8-aa85-14f25ce59ef0/{dateStart}/{dateEnd}`\n    )\n    .then((response) => {\n      console.log(response)\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_FETCH_PRESCRIPTIONS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_ERROR,\n        payload: \"Something went wrong\",\n      });\n    });\n};\n\nexport const fetchPatientPrescriptions = (patientId) => dispatch => {\n  console.log(patientId)\n  axios\n    .get(\n      `${url}patients/${patientId}/encounters/4ab293ff-6837-41e8-aa85-14f25ce59ef0/{dateStart}/{dateEnd}`\n    )\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_PATIENT_PRESCRIPTIONS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      console.log(\"Pharmacy Error: \", error);\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_ERROR,\n        payload: \"Something went wrong\",\n      });\n    });\n\n}\n// export const fetchEncounterById = (encounterId) => (dispatch) => {\n//          console.log(encounterId);\n//          axios\n//            .get(\n//              `${url}encounters/${encounterId}/form-data`\n//            )\n//            .then((response) => {\n//              dispatch({\n//                type: ACTION_TYPES.FETCH_ENCOUNTER_BY_ID,\n//                payload: response.data,\n//              });\n//            })\n//            .catch((error) => {\n//              console.log(\"Pharmacy Error: \", error);\n//              dispatch({\n//                type: ACTION_TYPES.PHARMACY_ERROR,\n//                payload: \"Something went wrong\",\n//              });\n//            });\n// };\n       \n// axios.put(`${url}form-data/${formId}`)\nexport const updatePrescriptionStatus = (formId, data) => (dispatch) => {\n         axios\n           .put( `${url}form-data/${formId}`, data)\n           .then((response) => {\n             dispatch({\n               type: ACTION_TYPES.UPDATE_PRESCRIPTION_STATUS,\n               payload: response.data,\n             });\n           })\n           .catch((error) => {\n             console.log(\"Pharmacy Error: \", error);\n             dispatch({\n               type: ACTION_TYPES.PHARMACY_ERROR,\n               payload: \"Something went wrong\",\n             });\n           });\n       };\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport \"./patientPrescriptions.css\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport {\n  fetchPatientPrescriptions,\n  updatePrescriptionStatus,\n} from \"../../actions/pharmacy\";\nimport { connect } from 'react-redux'\nimport { Divider } from \"@material-ui/core\";\n\nimport {\n  Col,\n  Row,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport indigo from \"@material-ui/core/colors/indigo\";\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  container: {\n    marginTop: \"5rem\",\n    width: \"88%\"\n  },\n});\n\nconst color = \"#1D4380\"\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor : color,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst textstyle = {\n  fontSize: \"14px\",\n  fontWeight: \"bolder\"\n};\n\nconst PatientPrescriptions = props => {\n  const forms = props.location.forms;\n  const patientName = props.location.patientName;\n   const classes = useStyles();\n  \n   const [modal2, setModal2] = useState(false);\n  const toggle2 = () => setModal2(!modal2);\n  const { className } = props;\n\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDispense = (formData, formId) => {\n    formData.prescription_status = 1\n    props.updatePrescriptionStatus(formId, formData);\n    console.log(formId)\n    setOpen(false);\n  };\n\n  useEffect(() => {\n   \n  })\n  \n\n  return (\n    <div className=\"patpres\">\n      <h2>Pharmacy</h2>\n      <Divider variant=\"middle\" />\n      <br />\n      <br />\n      {props.location.forms ? (\n        forms.map((form) => (\n          <Fragment key={form.id}>\n            <h5>View prescription - 012345678</h5>\n            <div className=\"info_box\">\n              <p> {patientName} ( 012345678) | 23 years</p>\n              <p> Female </p>\n            </div>\n\n              <TableContainer component={Paper} className={classes.container}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>Name</StyledTableCell>\n                        <StyledTableCell align=\"right\">Dosage</StyledTableCell>\n                        <StyledTableCell align=\"right\">Date Prescribed</StyledTableCell>\n                        <StyledTableCell align=\"right\">Date dispensed</StyledTableCell>\n                        <StyledTableCell align=\"right\">Action</StyledTableCell>\n                        <StyledTableCell align=\"right\">View Details</StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                          {forms.map((form) => (\n                            <TableRow key={form.id}>\n                              <TableCell >\n                                {form.data.generic_name}\n                              </TableCell>\n                              <TableCell align=\"right\">{form.data.dosage}</TableCell>\n                              <TableCell align=\"right\">{form.data.date_prescribed}</TableCell>\n                              <TableCell align=\"right\">{form.data.date_dispensed}</TableCell>\n                              <TableCell align=\"right\">\n                                {form.data.prescription_status == 0 ? (<button\n                                  style={{\n                                    marginTop: \"5px\",\n                                    borderRadius: \"3px\",\n                                    outline: \"none\",\n                                    backgroundColor: \"#40b02c\",\n                                    color: \"#ffffff\",\n                                  }}\n                                  onClick={handleClickOpen}\n                                >\n                                  dispense\n                                </button>\n                                ) : (\n                                    <button\n                                      style={{\n                                        marginTop: \"5px\",\n                                        borderRadius: \"3px\",\n                                        outline: \"none\",\n                                      }}\n                                      disabled\n                                    >\n                                      dispense\n                                    </button>)}\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                          </TableBody>\n                </Table>\n              </TableContainer>\n              <Modal\n                isOpen={modal2}\n                toggle={toggle2}\n                className={className}\n                size=\"lg\"\n              >\n                <ModalHeader toggle={toggle2}>Precription Details</ModalHeader>\n                <ModalBody>\n                  <Row style={{ marginTop: \"20px\" }}>\n                    <Col xs=\"12\">\n                      Drug Name\n                      <br />\n                      <p style={textstyle}>{form.data.generic_name} </p>\n                    </Col>\n                    <Col xs=\"4\">\n                      Dosage\n                      <br />\n                      <p style={textstyle}>{form.data.dosage}</p>\n                    </Col>\n                    <Col xs=\"4\">\n                      Unit\n                      <br />\n                      <p style={textstyle}>{form.data.duration_unit}</p>\n                    </Col>\n                    <Col xs=\"4\">\n                      Frequency\n                      <br />\n                      <p style={textstyle}>\n                        {form.data.dosage_frequency} time(s) daily\n                      </p>\n                    </Col>\n                  </Row>\n                  <Row style={{ marginTop: \"20px\" }}>\n                    <Col xs=\"4\">\n                      Start Date\n                      <br />\n                      <p style={textstyle}>{form.data.start_date}</p>\n                    </Col>\n                    <Col xs=\"12\">Additional Information</Col>\n                    <hr />\n                    <Col xs=\"4\">\n                      Instruction\n                      <br />\n                      <p style={textstyle}>{form.data.comment}</p>\n                    </Col>\n                    <Col xs=\"4\">\n                      Additional Instruction\n                      <br />\n                      <p style={textstyle}>\n                        {form.data.comment ? form.data.comment : \"None\"}\n                      </p>\n                    </Col>\n                  </Row>\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"secondary\" onClick={toggle2}>\n                    Close\n                  </Button>\n                </ModalFooter>\n              </Modal>\n              <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogContent>\n                  <DialogContentText id=\"alert-dialog-description\">\n                    Mark {form.data.generic_name} as dispensed?\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"danger\">\n                    No\n                  </Button>\n                  <Button\n                    onClick={() => handleDispense(form.data, form.id)}\n                    color=\"green\"\n                    autoFocus\n                  >\n                    Yes\n                  </Button>\n                </DialogActions>\n              </Dialog>\n          </Fragment>\n        ))\n      ) : (\n        <h2 style={{ margin: \"auto\" }}>No Prescriptions</h2>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    prescriptions: state.pharmacy.patientPrescriptions,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  fetchPatientPrescriptions,\n  updatePrescriptionStatus,\n})(PatientPrescriptions);\n","export const url = 'http://lamisplus.org/base-module/api/';\nexport const HIVSERVICECODE = \"\";\nexport const LABSERVICECODE = \"87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e\";\nexport const PHARMACYSERVICECODE = \"\";\n"],"sourceRoot":""}