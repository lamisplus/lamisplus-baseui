{"version":3,"sources":["components/Laboratory/PatientSearch.jsx","components/Laboratory/TestOrder.jsx","api/index.js","actions/laboratory.js"],"names":["FilterComponent","_ref","filterText","onFilter","onClear","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","className","onSubmit","e","preventDefault","reactstrap__WEBPACK_IMPORTED_MODULE_7__","type","placeholder","value","onChange","SampleExpandedComponent","_ref2","data","dateRegistration","dob","columns","name","selector","sortable","Display","cell","row","firstName","lastName","dateEncounter","timeCreated","formId","_getCharacters","Object","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","response","totalCount","wrap","_context","prev","next","fetch","url","concat","sent","json","abrupt","console","log","length","stop","apply","this","arguments","getCharacters","getTotalcount","encounterId","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","pathname","state","getpatientlists","ignoreRowClick","allowOverflow","button","grow","customStyles","headCells","style","color","fontSize","fontWeight","mapActionToProps","fetchAllLabTestOrderToday","fetchAllLabTestOrder","connect","patientsTestOrderList","laboratory","list","props","_React$useState","React","useState","_React$useState2","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setFilterText","_React$useState3","_React$useState4","resetPaginationToggle","setResetPaginationToggle","filteredItems","filter","item","toLowerCase","includes","hospitalNumber","useEffect","subHeaderComponentMemo","useMemo","target","reactstrap__WEBPACK_IMPORTED_MODULE_8__","react_data_table_component__WEBPACK_IMPORTED_MODULE_4___default","pagination","paginationResetDefaultPage","subHeader","subHeaderComponent","highlightOnHover","striped","subHeaderAlign","fixedHeader","expandableRows","persistTableHead","expandableRowsComponent","__webpack_require__","r","__webpack_exports__","d","TestOrderMain","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","_PatientSearch__WEBPACK_IMPORTED_MODULE_5__","xl","lg","md","LABSERVICECODE","fetchAllLabTestOrderOfPatient","createCollectedSample","fetchFormById","fetchAllTestGroup","fetchAllTestsByTestGroup","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_api__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_2__","react_toastify__WEBPACK_IMPORTED_MODULE_3__","dispatch","axios","get","baseUrl","then","ACTION_TYPES","payload","catch","error","id","lab_id","put","toast","success","setInterval","window","location","reload","onSuccess","onError"],"mappings":"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","file":"static/js/38.5480317a.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport \"./PatientSearch.css\";\nimport { Input, Form } from \"reactstrap\";\nimport { Card } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { fetchAllLabTestOrder } from \"actions/laboratory\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../../api\";\n\n\nfunction getTotalcount(formId) {\n  async function getCharacters() {\n    const response = await fetch(url + `encounters/${formId}/form-data`);\n    const totalCount = await response.json();\n    return console.log(totalCount.length) \n    \n  }\n  getCharacters();\n  \n}\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <Form className=\"cr-search-form\" onSubmit={e => e.preventDefault()}>\n    <Input\n      type=\"search\"\n      placeholder=\"Search by Patient Name, Patient ID \"\n      className=\"cr-search-form__input pull-right\"\n      value={filterText}\n      onChange={onFilter}\n    />\n  </Form>\n);\n\nconst SampleExpandedComponent = ({ data }) => (\n  <div>\n    <span>\n      <b> Date Of Registration:</b> {data.dateRegistration}{\" \"}\n    </span>{\" \"}\n    <br></br>{\" \"}\n    <span>\n      <b>Date Of Birth:</b> {data.dob}{\" \"}\n    </span>\n  </div>\n);\n\nconst columns = [\n  {\n    name: \"Patient ID\",\n    selector: \"hospitalNumber\",\n    sortable: false,\n    Display: true\n  },\n  {\n    name: \"Patient Name\",\n    selector: \"name\",\n    sortable: false,\n    cell: row => (\n      <span>\n        {row.firstName}\n        {row.lastName}\n      </span>\n    )\n  },\n  {\n    name: \"Test Order Date\",\n    selector: \"test order\",\n    sortable: false,\n  cell: row => <span>{row.dateEncounter}{' '} {row.timeCreated}</span>\n  },\n  {\n    name: \"Total Test Order\",\n    selector: \"test order\",\n    sortable: false,\n    cell: row => <span>{getTotalcount(row.encounterId)}</span>\n  },\n  {\n    name: \"Sample Collected\",\n    selector: \"test order\",\n    sortable: false,\n    cell: row => <span>{0}</span>\n  },\n  {\n    name: \"Action\",\n    cell: row => (\n      <div>\n        <Link\n          to={{\n            pathname: \"/collect-sample\",\n            state: { getpatientlists: { row } }\n          }}\n        >\n          Collect Sample  { ' '}\n        </Link>\n        {/* <Link to={`/patient-lab-test/${row.encounterId}/${row.hospitalNumber}`}>\n          Collect Sample\n        </Link> */}\n      </div>\n    ),\n    ignoreRowClick: true,\n    allowOverflow: true,\n    button: true,\n    grow: 2\n  }\n];\n\nconst customStyles = {\n  headCells: {\n    style: {\n      color: \"#202124\",\n      fontSize: \"14px\",\n      fontWeight: \"bold\"\n    }\n  }\n};\n\nconst LaboratoryTestOrder = props => {\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\n    false\n  );\n  // const [data, setData] = useState([])\n\n  const filteredItems = props.patientsTestOrderList.filter(\n    item =>\n      (item.firstName &&\n        item.firstName.toLowerCase().includes(filterText.toLowerCase())) ||\n      (item.lastName &&\n        item.lastName.toLowerCase().includes(filterText.toLowerCase())) ||\n      (item.hospitalNumber &&\n        item.hospitalNumber.toLowerCase().includes(filterText.toLowerCase()))\n  );\n\n  useEffect(() => {\n    props.fetchAllLabTestOrderToday();\n  }, []); //componentDidMount\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return (\n      <FilterComponent\n        onFilter={e => setFilterText(e.target.value)}\n        onClear={handleClear}\n        filterText={filterText}\n      />\n    );\n  }, [filterText, resetPaginationToggle]);\n\n  return (\n    <div className=\"searchTable\">\n      <Card>\n        <cardContent>\n          <DataTable\n            columns={columns}\n            data={filteredItems}\n            customStyles={customStyles}\n            pagination\n            paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\n            subHeader\n            subHeaderComponent={subHeaderComponentMemo}\n            highlightOnHover={true}\n            striped={true}\n            subHeaderAlign={\"left\"}\n            // noHeader={false}\n            fixedHeader={true}\n            expandableRows\n            persistTableHead\n            expandableRowsComponent={<SampleExpandedComponent />}\n          />\n        </cardContent>\n      </Card>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n\n  return {\n    patientsTestOrderList: state.laboratory.list\n  };\n};\n\nconst mapActionToProps = {\n  fetchAllLabTestOrderToday: fetchAllLabTestOrder\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(LaboratoryTestOrder);\n","import React from 'react';\nimport {\n    Card,\n    Col,\n    Row,\n    CardBody,\n} from 'reactstrap';\nimport TestOrderList from './PatientSearch';\n\n\n\nexport default function TestOrderMain (props) {\n  \n    return (\n\n            <Row>\n            <Col xl={12} lg={12} md={12}>\n                \n                <Card>\n                    <CardBody>\n                    <TestOrderList />\n                    </CardBody>\n                </Card>\n            </Col>\n            </Row>\n\n    );\n}","export const url = 'http://lamisplus.org/base-module/api/';\nexport const HIVSERVICECODE = \"\";\nexport const LABSERVICECODE = \"87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e\";\nexport const PHARMACYSERVICECODE = \"\";\n","import axios from \"axios\";\nimport { url as baseUrl , LABSERVICECODE} from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\nimport { toast } from \"react-toastify\";\n\n//TODO: by Jeph => Complete documentation\n\n/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n */\n\nexport const fetchAllLabTestOrder = () => dispatch => {\n  axios\n    .get(`${baseUrl}encounters/${LABSERVICECODE}/{dateStart}/{dateEnd}`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.LABORATORY_TESTORDER,\n        payload: response.data\n      })\n     console.log(response.data)\n    })\n    .catch(error =>\n      dispatch({\n        type: ACTION_TYPES.ERROR_LABORATORY_TESTORDER,\n        payload: 'Something went wrong, please try again'\n      })\n    );\n};\nexport const fetchAllLabTestOrderOfPatient = id => dispatch => {\n  axios\n    .get(`${baseUrl}encounters/${id}/form-data`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.LABORATORY_TESTORDER_FOR_PATIENT,\n        payload: response.data\n      })\n    })\n    .catch(error =>\n      dispatch({\n        type: ACTION_TYPES.ERROR_LABORATORY_TESTORDER_FOR_PATIENT,\n        payload: error\n      })\n    );\n};\nexport const fetchFormDataById = id => dispatch => {\n  axios\n    .get(`${baseUrl}encounters/form-data/${id}`)\n    .then(response => {\n      console.log(response)\n      dispatch({\n        type: ACTION_TYPES.LABORATORY_TESTORDER_FOR_LAB,\n        payload: response.data\n      })\n    })\n    .catch(error =>\n      dispatch({\n        type: ACTION_TYPES.ERROR_LABORATORY_TESTORDER_FOR_LAB,\n        payload: error\n      })\n    );\n};\nexport const createCollectedSample = (data, lab_id) => dispatch => {\n  \n  axios\n    .put(`${baseUrl}form-data/${lab_id}`, data)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.CREATE_COLLECT_SAMPLE,\n        payload: response.data\n      });\n     \n      toast.success(\"Sample Collection was successful\");\n      setInterval(window.location.reload(false), 80000);\n    })\n    .catch(error =>{\n      \n      dispatch({\n        type: ACTION_TYPES.ERROR_CREATE_COLLECT_SAMPLE,\n        payload: error\n      })\n      console.log(error)\n      toast.error(\"Something went wrong, please try again\");\n      setInterval(window.location.reload(false), 80000);\n      //window.location.reload()\n      \n    });\n};\n\nexport const transferSample = (samples, lab_id) => dispatch => {\n \n  axios\n    .put(`${baseUrl}form-data/`, samples)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.TRANSFER_SAMPLE,\n        payload: response.data\n      });\n      toast.success(\"Sample Transfer was successful\");\n    })\n    .catch(error =>{\n      \n      dispatch({\n        type: ACTION_TYPES.ERROR_TRANSFER_SAMPLE,\n        payload: error\n      })\n      toast.error(\"Something went wrong, please try again\");\n\n    });\n};\nexport const fetchFormById = id => dispatch => {\n  //console.log(id)\n  axios\n    .get(`${baseUrl}form-data/${id}`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FORMDATA_FETCH_BY_ID,\n        payload: response.data\n      });\n      //console.log(\"is getting here \") \n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.ERROR_FORMDATA_FETCH_BY_ID,\n        payload: error\n      })\n      console.log(error)\n    }\n    );\n};\n\nexport const create = data => dispatch => {\n  axios\n    .post(`${baseUrl}visits/`, data)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.CHECKIN_CREATE,\n        payload: response.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.CHECKIN_ERROR,\n        payload: \"Something went wrong, please try again\"\n      });\n    });\n};\n\nexport const update = (id, data) => dispatch => {\n  axios\n    .put(`${baseUrl}visits/${id}`, data)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.CHECKIN_UPDATE,\n        payload: response.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.CHECKIN_ERROR,\n        payload: \"Something went wrong, please try again\"\n      });\n    });\n};\n\nexport const Delete = id => dispatch => {\n  axios\n    .delete(`${baseUrl}visits/${id}`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.CHECKIN_DELETE,\n        payload: response.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        types: ACTION_TYPES.CHECKIN_ERROR,\n        payload: \"Something went wrong, please try again\"\n      });\n    });\n};\n\nexport const fetchAllTestGroup = (onSuccess, onError) => dispatch => {\n  axios\n    .get(`${baseUrl}lab-test-groups/`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL_TEST_GROUP,\n        payload: response.data\n      })\n      onSuccess()\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.LABORATORY_ERROR,\n        payload: 'Something went wrong, please try again'\n      })\n      onError(error.response)\n    })\n}\n\nexport const fetchAllTestsByTestGroup = (id, onSuccess, onError) => dispatch => {\n  axios\n    .get(`${baseUrl}lab-test-groups/${id}/lab-tests`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL_TESTS_BY_TEST_GROUP,\n        payload: response.data\n      })\n      onSuccess()\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.LABORATORY_ERROR,\n        payload: 'Something went wrong, please try again'\n      })\n      onError(error.response)\n    })\n}\n\n"],"sourceRoot":""}