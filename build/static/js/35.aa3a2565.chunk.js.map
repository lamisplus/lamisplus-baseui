{"version":3,"sources":["main/webapp/actions/formBuilder.js","main/webapp/components/formBuilder/ViewForm.js","main/webapp/api/codes.js","main/webapp/actions/patients.js","main/webapp/components/Typography.js","main/webapp/components/Page.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchService","createForm","updateForm","fetchById","fetchForms","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_api__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_2__","dispatch","axios","get","concat","url","then","response","console","log","type","FORMTYPES","payload","data","catch","error","post","id","put","programId","useStyles","makeStyles","theme","root2","width","height","overflow","mapActionsToProps","fetchPatientByHospitalNumber","fetchByHospitalNumber","connect","state","arguments","length","undefined","form","forms","patient","patients","services","formReducers","formList","props","myform","_React$useState","React","useState","_React$useState2","Object","_Users_matosky_Documents_lamis_dev_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","res","setRes","_React$useState3","_React$useState4","displayType","setDisplayType","_React$useState5","_React$useState6","setprogramId","_React$useState7","_React$useState8","formCode","setformCode","_React$useState9","_React$useState10","form2","setform2","textAreaRef","useRef","useEffect","loadForm","e","JSON","parse","target","value","v","code","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components_Page__WEBPACK_IMPORTED_MODULE_2__","title","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","react_formio__WEBPACK_IMPORTED_MODULE_3__","errors","ref","submission","hideComponents","onSubmit","fetch","body","stringify","headers","content-type","method","mode","emit","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","md","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","class","reactstrap__WEBPACK_IMPORTED_MODULE_15__","onChange","required","handleProgramChange","map","program","key","name","reactstrap__WEBPACK_IMPORTED_MODULE_16__","color","className","onClick","assign","resourceObject","schema","cols","GENERAL_SERVICE","VITAL_SIGNS_FORM","DRUG_PRESCRIPTION_FORM","LAB_TEST_ORDER_FORM","CONSULTATION_FORM","ADMIT_PATIENT_FORM","DISCHARGE_PATIENT_FORM","TRANSFER_INPATIENT_FORM","CHECK_OUT_PATIENT_FORM","PATIENT_ALLERGY_FORM","APPOINTMENT_FORM","IN_PATIENT_BOOKED","IN_PATIENT_UNBOOKED","OUT_PATIENT_UNBOOKED","LAB_ORDER_STATUS","DRUG_ORDER_STATUS","fetchAll","create","update","Delete","fetchPatientAllergies","fetchPatientLatestVitalSigns","fetchPatientVitalSigns","fetchPatientTestOrders","fetchPatientLatestMedicationOrder","fetchPatientEncounterProgramCodeExclusionList","fetchCheckedInPatients","api_codes__WEBPACK_IMPORTED_MODULE_3__","react_toastify__WEBPACK_IMPORTED_MODULE_4__","onSuccess","onError","baseUrl","ACTION_TYPES","toast","success","apierror","message","delete","CODES","limit","sortField","sortOrder","exclusionList","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","restProps","objectWithoutProperties","classes","classNames","defineProperty","react_default","defaultProps","bem","bn","Page","breadcrumbs","children","b","components_Typography","Breadcrumb","BreadcrumbItem","_ref2","index","active"],"mappings":"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","file":"static/js/35.aa3a2565.chunk.js","sourcesContent":["import axios from 'axios'\n\nimport {url as baseUrl, url} from '../api'\n\nimport * as FORMTYPES from './types'\n\nexport const fetchService = () => dispatch => {\n    axios.get(`${url}programs`)\n        .then(response => {\n            console.log(response)\n            dispatch({\n                type: FORMTYPES.FORMTYPES_FETCH_SERVICES,\n                payload: response.data\n            })\n        })\n        .catch(error => {\n            console.log(error)\n            dispatch({\n                type: FORMTYPES.FORMTYPES_ERROR,\n                payload: 'Something went wrong'\n\n            })\n        })\n}\n\nexport const createForm = (data) => dispatch => {\n    console.log(data)\n    axios\n        .post(`${url}forms/`, data)\n        .then(response => {\n            dispatch({\n                type: FORMTYPES.FORMTYPES_CREATE_FORM,\n                payload: response.data\n            })\n            console.log(response)\n        })\n        //onSuccess()\n        .catch(error => {\n            //onError()\n            dispatch({\n                type: FORMTYPES.FORMTYPES_ERROR,\n                payload: 'please try again'\n            })\n            //onError(error.response)\n        })\n}\n\nexport const updateForm = (id, data) => dispatch => {\n    axios\n        .put(`${url}forms/${id}`, data)\n        .then(response => {\n            dispatch({\n                type: FORMTYPES.FORMTYPES_UPDATE,\n                payload: response.data\n            })\n        })\n        .catch(error => {\n            dispatch({\n                type: FORMTYPES.FORMTYPES_ERROR,\n                payload: 'Something went wrong, please try again'\n            })\n        })\n}\n\n// export const fetchById = (id, onSuccess, onError) => dispatch => {\n//     dispatch({\n//         type:FORMTYPES.FORMTYPES_FETCH_BY_ID,\n//         payload: {}\n//     })\n//\n//     axios\n//         .get(`${url}forms/${id}/formCode`)\n//         .then(response => {\n//             dispatch({\n//                 type:FORMTYPES.FORMTYPES_FETCH_BY_ID,\n//                 payload: response.data\n//             })\n//             onSuccess()\n//         })\n//         .catch(error => {\n//             //onError()\n//             dispatch({\n//                 type: FORMTYPES.FORMTYPES_ERROR,\n//                 payload: 'Error loading form, something went wrong. Please try again'\n//             })\n//    // onError(error.response)\n//         })\n// }\n\nexport const fetchById = (programId) => dispatch => {\n    axios.get(`${url}programs/${programId}/forms`)\n        .then(response => {\n            console.log(response)\n            dispatch({\n                type: FORMTYPES.FORMTYPES_FETCH_BY_ID,\n                payload: response.data\n            })\n        })\n        .catch(error => {\n            console.log(error)\n            dispatch({\n                type: FORMTYPES.FORMTYPES_ERROR,\n                payload: 'Something went wrong'\n\n            })\n        })\n}\nexport const fetchAll = (onSuccess, onError) => dispatch => {\n    axios\n        .get(`${url}forms`)\n        .then(response => {\n            dispatch({\n                type: FORMTYPES.FORMTYPES_FETCH_ALL,\n                payload: response.data\n            })\n            onSuccess()\n        })\n        .catch(error => {\n            //onError()\n            dispatch({\n                type:  FORMTYPES.FORMTYPES_ERROR,\n                payload: 'Something went wrong, please try again'\n            })\n\n        })\n}\n\nexport const fetchForms = () => dispatch => {\n    axios.get(`${url}programs/1/forms`)\n        .then(response => {\n            console.log(response)\n            dispatch({\n                type: FORMTYPES.FORMTYPES_FETCH_ALL,\n                payload: response.data\n            })\n        })\n        .catch(error => {\n            console.log(error)\n            dispatch({\n                type: FORMTYPES.FORMTYPES_ERROR,\n                payload: 'Something went wrong'\n\n            })\n        })\n}","import React, {useRef, useEffect, useState} from 'react';\nimport Page from 'components/Page';\nimport {  Errors, Form, FormBuilder } from 'react-formio';\nimport {Card,CardContent,} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport {url} from '../../api'\nimport {fetchService, fetchById, updateForm, fetchForms} from '../../actions/formBuilder'\nimport {fetchByHospitalNumber} from '../../actions/patients'\n\nimport {\n    FormGroup,\n    Input,\n    Label,\n    Col,\n    Row,\n    Button\n} from 'reactstrap';\n\nconst useStyles = makeStyles(theme => ({\n    root2: {\n        width: '100%',\n        height: 100,\n        overflow: 'auto',\n    }\n}));\n\nconst Update = props => {\n    const [res, setRes] = React.useState(\"\");\n    const [displayType, setDisplayType] = React.useState(\"\");\n    const [programId, setprogramId] = React.useState(\"\");\n    const [formCode, setformCode] = React.useState();\n    const [form2, setform2] = React.useState();\n    const classes = useStyles();\n    let myform;\n    const submission = props.patient;\n    const textAreaRef = useRef(null);\n\n    useEffect (() => {\n        props.fetchService();\n        props.fetchForms();\n    }, [])\n    useEffect (() => {\n         //props.fetchById()\n        props.fetchPatientByHospitalNumber('P123189', null, null)\n    }, [])\n\n    const handleProgramChange = (e) => {\n        setprogramId(e.target.value)\n        props.fetchById(e.target.value)\n    }\n\n    const handleSubmit = () => {\n        props.updateForm(form2.id, form2);\n    }\n\n    const loadForm = (e) => {\n        console.log(JSON.parse(e.target.value));\n        const v = JSON.parse(e.target.value);\n        \n        setformCode(v.code);\n        \n        setform2(v)\n        //setRes(form.resourceObject);\n    }\n    return (\n        <Page title=\"Form Renderer\" >\n            <Card >\n                <CardContent>\n                    <h4>View Form</h4>\n                    <hr />\n                    <Errors errors={props.errors} />\n    \n                    {!res ? \"\" : \n                    <Form\n                        form={JSON.parse(res)}\n                        ref={form => myform = form}\n                        submission={{data : {patient: props.patient}}}\n                        //src={url}\n                        hideComponents={props.hideComponents}\n                        //onSubmit={props.onSubmit}\n                        onSubmit={(submission) => {\n                            console.log(submission);\n                            return fetch('https://lp-base-app.herokuapp.com/api/', {\n                                body: JSON.stringify(submission),\n                                headers: {\n                                    'content-type': 'application/json'\n                                },\n                                method: 'POST',\n                                mode: 'cors',\n                            }).then(res => {\n                                console.log(res);\n                                myform.emit('submitDone', submission);\n                            })}}\n                    />\n                        }\n                    <br></br>\n                </CardContent>\n            </Card>\n            <hr></hr>\n            <Card >\n                <CardContent>\n                    <h4>Edit Form</h4>\n                    <Row>\n                        <Col md={4}> <FormGroup>\n                            <Label class=\"sr-only\">Display Type</Label>\n                            <Input type=\"select\"  id=\"displayType\" value={displayType} onChange={e => setDisplayType(e.target.value)}>\n                                <option value=\"form\">Form</option>\n                                <option value=\"wizard\">Wizard</option></Input>\n                        </FormGroup></Col>\n\n                        <Col md={4}> <FormGroup>\n                            <Label class=\"sr-only\">Program Area</Label>\n                            {props.services.length && props.services.length > 0 ?\n                                <Input type=\"select\" class=\"form-control\" id=\"programId\" required value={programId}  onChange={e => handleProgramChange(e) }>\n                                    {props.services.map(program => (<option key={program.id} value={program.id} >{program.name}</option>))}\n                                </Input>:  <Input type=\"select\" class=\"form-control\" id=\"programId\" required value={programId} onChange={e => setprogramId(e.target.value)}>\n                                    <option>No program found</option>\n                                </Input>}\n                        </FormGroup></Col>\n\n                        <Col md={4}> <FormGroup>\n                            <Label class=\"sr-only\">Form Name</Label>\n                            {props.formList.length && props.formList.length > 0 ?\n                                <Input type=\"select\" class=\"form-control\" id=\"formCode\" required value={formCode}  onChange={e => loadForm(e) }>\n                                    <option value=\"\">Select One</option>\n                                    {props.formList.map(form => (<option value={JSON.stringify(form)}>{form.name}</option>))}\n                                </Input>:  <Input type=\"select\" class=\"form-control\" id=\"formCode\" required value={formCode} onChange={e => setformCode(e.target.value)}>\n                                </Input>}\n                        </FormGroup></Col>\n                    </Row>\n                    <Row>\n                        <Col md={2}> <FormGroup>\n                            <label class=\"sr-only\"></label>\n                            <Button color=\"primary\" className=\" mt-4\" onClick={() => loadForm()}>Load Form</Button>\n                        </FormGroup></Col>\n\n                        <Col md={2}> <FormGroup>\n                            <label class=\"sr-only\"></label>\n                            <button type=\"button\"  class=\"form-control btn btn-primary mt-4\" onClick={() => handleSubmit()}>Update Form</button>\n                        </FormGroup></Col>\n                    </Row>\n                    { form2 ? \n                    <FormBuilder form={form2.resourceObject} {...props} onChange={(schema) => {\n                       // console.log(JSON.stringify(schema));\n                        setRes(JSON.stringify(schema));\n                    }} />\n: \"\"\n                }\n                    <br></br>\n                </CardContent>\n            </Card>\n            <hr></hr>\n            <Card >\n                <CardContent>\n                    <h4>Json Form</h4>\n                    <div >\n                    <textarea cols=\"100\"\n                              ref={textAreaRef}\n                              value={res}/>\n                    </div>\n                </CardContent>\n            </Card>\n        </Page>\n    );\n}\n\nconst mapStateToProps =  (state = { form:{}}) => {\n    console.log(state.forms)\n    return {\n        patient: state.patients.patient,\n        services: state.formReducers.services,\n        formList: state.formReducers.form,\n    }}\n\nconst mapActionsToProps = ({\n    fetchService: fetchService,\n    fetchById: fetchById,\n    updateForm: updateForm,\n    fetchPatientByHospitalNumber: fetchByHospitalNumber,\n    fetchForms:fetchForms\n})\n\nexport default connect(mapStateToProps, mapActionsToProps)(Update)\n\n//\n","/**\n * @CODES\n * ==============================================\n * PROGRAM CODES\n */\n\nexport const GENERAL_SERVICE = '25216afc-d158-4696-ada6-00df609b9a4c'\n\n\n/**\n * @CODES\n * ==============================================\n * FORM CODES\n */\n\nexport const VITAL_SIGNS_FORM = 'bc5d44b8-8ed1-4de0-85de-c3c6f2c91cd0'\nexport const DRUG_PRESCRIPTION_FORM = '4ab293ff-6837-41e8-aa85-14f25ce59ef0'\nexport const LAB_TEST_ORDER_FORM = '87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e'\nexport const CHECK_IN_FORM = '7f38c3e4-f765-4a9f-9a12-cbc1d26d9864'\nexport const CONSULTATION_FORM = 'd157d4e2-4031-499d-b32b-7562208a10cf'\nexport const ADMIT_PATIENT_FORM = 'f47b2db9-cf1b-4972-8c22-3f353b5fa222'\nexport const DISCHARGE_PATIENT_FORM = '8e07eb78-0449-42bd-bd21-9ef9b489ad7d'\nexport const TRANSFER_INPATIENT_FORM = '4c0db2ee-7916-4ea6-b24d-42234c8ac0a7'\nexport const CHECK_OUT_PATIENT_FORM = 'ec84dd9a-9493-4b73-b501-6201a06982a6'\nexport const PATIENT_ALLERGY_FORM = '796f2a0f-1e76-42af-a24a-e6f09dfedbe7'\nexport const APPOINTMENT_FORM = '22ec08bd-eeae-4f5e-9041-44461d511e90'\n\n/**\n * @CODES\n * ==============================================\n * TYPE PATIENT CODES\n */\nexport const IN_PATIENT_BOOKED = 3\nexport const IN_PATIENT_UNBOOKED = 2\nexport const OUT_PATIENT_BOOKED = 1\nexport const OUT_PATIENT_UNBOOKED = '0'\nexport const EMERGENCY_PATIENT = 4\n\n/**\n * @CODES\n * ==============================================\n * LAB ORDER STATUS CODES\n */\nexport const LAB_ORDER_STATUS = [{name:\"Sample Collected\", id: 1},\n{name:\"Sample Transfer\", id: 2},\n{name:\"Sample Verified\", id: 3},\n{name:\"Sample Rejected\", id: 4},\n{name:\"Result Available\", id: 5},\n{name:\"Pending\", id:0}];\n\n\nexport const DRUG_ORDER_STATUS = [{name:\"Not Dispensed\", id: 0},\n{name:\"Dispensed\", id: 1}];\n\n","import axios from \"axios\";\nimport { url as baseUrl } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\nimport * as CODES from \"api/codes\";\nimport { toast } from \"react-toastify\";\n\n/**\n * @Actions\n * CheckIn CRUD OPERATIONS\n * returns API response from server\n * =================================\n * fetchAll()\n * fetchById()\n * create()\n * update()\n * Delete()\n * fetchPatientVitals()\n * fetchPatientAllergies()\n * fetchPatientLatestVitalSigns()\n * fetchCountries()\n * @method GET => fetchPatientTestOrders()  get all patient's lab order encounter: params {patientId}{formName} || query {null}\n * @method GET => fetchPatientEncounters() get all patient's encounter: params{patientId, onSuccess, onError} || query{null}\n * @method GET => fetchPatientEncounterProgramCodeExclusionList() get all patient's encounter that is not general service: params{patientId, onSuccess, onError} || query{null}\n */\nexport const fetchAll = (onSuccess, onError) => dispatch => {\n  axios\n    .get(`${baseUrl}patients/`)\n    .then(response => {\n      console.log(response.data);\n      if(onSuccess){\n        onSuccess();\n      }\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_FETCH_ALL,\n        payload: response.data\n      });\n      onSuccess();\n    })\n\n    .catch(error => {\n      if(onError){\n        onError();\n      }\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: \"Something went wrong, please try again\"\n      })\n      onError();\n    }\n    \n    );\n};\n\nexport const fetchById = (id, onSuccess, onError) => dispatch => {\n  if(id){\n  axios\n    .get(`${baseUrl}patients/${id}`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_FETCH_BY_ID,\n        payload: response.data\n      });\n      onSuccess && onSuccess();\n    })\n    .catch(error =>\n      {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: error\n      })\n      onError && onError();\n    } \n    );\n    } \n};\n\n\nexport const create = (data,onSuccess, onError) => dispatch => {\n  console.log(data);\n  axios\n    .post(`${baseUrl}patients/`, data)\n    .then(response => {\n\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_CREATE,\n        payload: response.data\n      });\n      onSuccess && onSuccess();\n      toast.success(\"Patient Register Save Successfully!\");\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: \"Something went wrong\"\n      });\n      onError()\n      if(error.response.data.apierror.message===null || error.response.data.apierror.message===\"\"){\n        toast.error(\"Something went wrong\");\n      }else{\n        toast.error(error.response.data.apierror.message);\n      }\n       \n       //console.log(error.response.data.apierror.message);\n    });\n};\n\nexport const update = (data, id, onSuccess, onError) => dispatch => {\n\n  console.log(`${baseUrl}patients/${id}`);\n    axios\n    .put(`${baseUrl}patients/${id}`, data)\n    .then(response => {\n\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_UPDATE,\n        payload: response.data\n      });\n      onSuccess()\n      toast.success(\"Patient record was updated successfully!\");\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload:error.response.data\n      });\n      console.log(error.response.data)\n      onError()\n      if(error.response.data.apierror.message===null || error.response.data.apierror.message===\"\"){\n        toast.error(\"Something went wrong\");\n      }else{\n        toast.error(error.response.data.apierror.message);\n      }\n     //console.log(error.response.data.apierror.message);\n    });\n\n\n};\n\nexport const Delete = (id) => dispatch => {\n  console.log(`${baseUrl}patients/${id}`);\n  axios\n  .delete(`${baseUrl}patients/${id}`)\n  .then(response => {\n\n    dispatch({\n      type: ACTION_TYPES.PATIENT_DELETE,\n      payload: id\n    });\n    \n    toast.success(\"Patient record was deleted successfully!\");\n  })\n  .catch(error => {\n    dispatch({\n      type: ACTION_TYPES.PATIENTS_ERROR,\n      payload:error.response.data\n    });\n    //console.log(error.response.data)\n    \n    if(error.response.data.apierror.message===null || error.response.data.apierror.message===\"\"){\n      toast.error(\"Something went wrong\");\n    }else{\n      toast.error(error.response.data.apierror.message);\n    }\n   //console.log(error.response.data.apierror.message);\n  });\n};\n\n\nexport const fetchPatientAllergies = (id, onSuccess, onError) => dispatch => {\n  axios\n    .get(`${baseUrl}patients/${id}/encounters/${CODES.PATIENT_ALLERGY_FORM}/`)\n    .then(response => {\n      if(onSuccess){\n        onSuccess();\n      }\n      dispatch({\n        type: ACTION_TYPES.PATIENT_ALLERGIES,\n        payload: response.data\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: 'Something went wrong, please try again'\n      })\n      if(onError){\n        onError();\n      }\n    }\n    )\n   \n}\n\n\nexport const fetchPatientLatestVitalSigns = (id, onSuccess, onError) => dispatch => {\n  axios\n    .get(`${baseUrl}patients/${id}/encounters/${CODES.VITAL_SIGNS_FORM}`, {limit: 1, sortField: \"dateEncounter\", sortOrder: \"desc\"} )\n    .then(response => {\n      if(onSuccess){\n        onSuccess();\n      }\n      if(response.data.length > 0){\n      dispatch({\n        type: ACTION_TYPES.PATIENT_LATEST_VITAL_SIGNS,\n        payload: response.data[0]\n      })\n    }\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: 'Something went wrong, please try again'\n      })\n      if(onError){\n        onError();\n      }\n    }\n    )\n}\n\n\nexport const fetchPatientVitalSigns = (id, onSuccess, onError) => dispatch => {\n  if(id){\n   axios\n     .get(`${baseUrl}patients/${id}/encounters/${CODES.VITAL_SIGNS_FORM}`)\n     .then(response => {\n       dispatch({\n         type: ACTION_TYPES.PATIENT_VITAL_SIGNS,\n         payload: response.data\n       })\n       onSuccess && onSuccess() ;\n     })\n     .catch(error => {\n       dispatch({\n         type: ACTION_TYPES.PATIENTS_ERROR,\n         payload: 'Something went wrong, please try again'\n       })\n       onError && onError();\n      }\n     )\n     }  \n }\n\n\n export const fetchPatientTestOrders = (id, onSuccess, onError) => dispatch => {\n  if(id){\n   axios\n     .get(`${baseUrl}patients/${id}/encounters/${CODES.LAB_TEST_ORDER_FORM}`, {limit: 5, sortField: \"dateEncounter\", sortOrder: \"desc\"})\n     .then(response => {\n       dispatch({\n         type: ACTION_TYPES.PATIENT_LAB_ORDERS,\n         payload: response.data\n       })\n       if(onSuccess){\n       onSuccess()\n       }\n     })\n     .catch(error => {\n       dispatch({\n         type: ACTION_TYPES.PATIENTS_ERROR,\n         payload: 'Something went wrong, please try again'\n       })\n       if(onError){\n       onError()\n       }\n      }\n     )\n     }  \n }\n export const fetchPatientLatestMedicationOrder = (id, onSuccess, onError) => dispatch => {\n  if(id){\n   axios\n     .get(`${baseUrl}patients/${id}/encounters/${CODES.DRUG_PRESCRIPTION_FORM}`, {limit: 5, sortField: \"dateEncounter\", sortOrder: \"desc\"} )\n     .then(response => {\n      onSuccess && onSuccess() ;\n       dispatch({\n         type: ACTION_TYPES.PATIENT_LATEST_MEDICATION_LIST,\n         payload: response.data\n       })\n     })\n     .catch(error => {\n      onError && onError();\n       dispatch({\n         type: ACTION_TYPES.PATIENTS_ERROR,\n         payload: 'Something went wrong, please try again'\n       })\n       \n      }\n     )\n     }  \n }\n\n export const fetchByHospitalNumber = (id, onSuccess, onError) => dispatch => {\n  axios\n    .get(`${baseUrl}patients/${id}`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_FETCH_BY_ID,\n        payload: response.data\n      });\n      if(onSuccess){\n      onSuccess();\n      }\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: \"Something went wrong, please try again\"\n      })\n      if(onError){\n      onError();\n      }\n    }\n    );\n};\n \nexport const fetchPatientEncounterProgramCodeExclusionList = (id, onSuccess, onError) => dispatch => {\n  if(id){\n    const exclusionList = [CODES.GENERAL_SERVICE];\n   axios\n     .get(`${baseUrl}patients/${id}/encounters/programCodeExclusionList?programCodeExclusionList=${exclusionList}` )\n     .then(response => {\n       dispatch({\n         type: ACTION_TYPES.PATIENT_EXCLUSIVE_ENCOUNTER_LIST,\n         payload: response.data\n       })\n       onSuccess && onSuccess() ;\n     })\n     .catch(error => {\n       dispatch({\n         type: ACTION_TYPES.PATIENTS_ERROR,\n         payload: 'Something went wrong, please try again'\n       })\n       onError && onError() ;\n      }\n     )\n     }  \n }\n\nexport const fetchCountries = () => dispatch => {\n  axios(`${baseUrl}countries`)\n    .then(response => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_COUNTRIES,\n        payload: response.data\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: 'Something went wrong, please try again'\n    })\n  })\n }\n\n export const fetchPatientEncounterByFormCode = (id, formCode, onSuccess, onError) => dispatch => {\n   axios\n     .get(`${baseUrl}patients/${id}/encounters/${formCode}`)\n     .then(response => {\n      dispatch({\n        type: ACTION_TYPES.PATIENT_ENCOUNTER_LIST,\n        payload: response.data\n      })\n      if(onSuccess){\n      onSuccess()\n      }\n    })\n    .catch(error => {\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: 'Something went wrong, please try again'\n      })\n      if(onError){\n      onError()\n      }\n     }\n    )\n }\n\n \nexport const fetchCheckedInPatients = (onSuccess, onError) => dispatch => {\n  axios\n    .get(`${baseUrl}visits/`)\n    .then(response => {\n      if(onSuccess){\n        onSuccess();\n      }\n      dispatch({\n        type: ACTION_TYPES.CHECKEDIN_PATIENT_FETCH_ALL,\n        payload: response.data\n      });\n    })\n    .catch(error => {\n      if(onError){\n        onError();\n      }\n      dispatch({\n        type: ACTION_TYPES.PATIENTS_ERROR,\n        payload: \"Something went wrong, please try again\"\n      })\n    }\n    );\n};","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n"],"sourceRoot":""}