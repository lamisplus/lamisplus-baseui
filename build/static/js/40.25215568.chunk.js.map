{"version":3,"sources":["actions/pharmacy.js","components/Pharmacy/PatientPrescriptions.js","api/index.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchPrescriptions","fetchPatientPrescriptions","updatePrescriptionStatus","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_api__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_2__","dispatch","axios","get","concat","url","then","response","console","log","type","ACTION_TYPES","payload","data","catch","error","patientId","formId","put","textstyle","fontSize","fontWeight","connect","state","prescriptions","pharmacy","patientPrescriptions","props","forms","location","patientName","_useState","useState","_useState2","Object","_Users_user_Lamis_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","modal2","setModal2","toggle2","className","_useState3","_useState4","open","setOpen","handleClickOpen","handleClose","useEffect","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","variant","style","width","map","form","react__WEBPACK_IMPORTED_MODULE_1__","marginBottom","generic_name","comment","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_3___default","onClick","cursor","prescription_status","marginTop","borderRadius","outline","backgroundColor","color","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_7__","isOpen","toggle","size","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xs","dosage","duration_unit","dosage_frequency","start_date","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_14__","onClose","aria-labelledby","aria-describedby","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_17__","id","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_15__","formData","autoFocus","LABSERVICECODE"],"mappings":"mHAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAAC,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,IAcaG,EAAqB,kBAAM,SAAAQ,GACtCC,IACGC,IADH,GAAAC,OAEOC,IAFP,0EAIGC,KAAK,SAACC,GACLC,QAAQC,IAAIF,GACZN,EAAS,CACPS,KAAMC,IACNC,QAASL,EAASM,SAGrBC,MAAM,SAACC,GACNd,EAAS,CACPS,KAAMC,IACNC,QAAS,6BAKJlB,EAA4B,SAACsB,GAAD,OAAe,SAAAf,GACtDO,QAAQC,IAAIO,GACZd,IACGC,IADH,GAAAC,OAEOC,IAFP,aAAAD,OAEsBY,EAFtB,2EAIGV,KAAK,SAACC,GACLN,EAAS,CACPS,KAAMC,IACNC,QAASL,EAASM,SAGrBC,MAAM,SAACC,GACNP,QAAQC,IAAI,mBAAoBM,GAChCd,EAAS,CACPS,KAAMC,IACNC,QAAS,6BA2BJjB,EAA2B,SAACsB,EAAQJ,GAAT,OAAkB,SAACZ,GAClDC,IACGgB,IADH,GAAAd,OACWC,IADX,cAAAD,OAC2Ba,GAAUJ,GAClCP,KAAK,SAACC,GACLN,EAAS,CACPS,KAAMC,KACNC,QAASL,EAASM,SAGrBC,MAAM,SAACC,GACNP,QAAQC,IAAI,mBAAoBM,GAChCd,EAAS,CACPS,KAAMC,IACNC,QAAS,mQChDxB,IAAMO,EAAY,CAChBC,SAAU,OACVC,WAAY,UAoNCC,sBANS,SAACC,GACvB,MAAO,CACLC,cAAeD,EAAME,SAASC,uBAIM,CACtChC,8BACAC,8BAFa2B,CAjNc,SAAAK,GAE3B,IAAMC,EAAQD,EAAME,SAASD,MACvBE,EAAcH,EAAME,SAASC,YAHCC,EAKPC,oBAAS,GALFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAK5BK,EAL4BH,EAAA,GAKpBI,EALoBJ,EAAA,GAM9BK,EAAU,kBAAMD,GAAWD,IACzBG,EAAcZ,EAAdY,UAP4BC,EAUZR,oBAAS,GAVGS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAU7BE,EAV6BD,EAAA,GAUvBE,EAVuBF,EAAA,GAY9BG,EAAkB,WACtBD,GAAQ,IAGJE,EAAc,WAClBF,GAAQ,IAcV,OALAG,oBAAU,cAMRC,EAAAC,EAAAC,cAAA,OAAKV,UAAU,WACbQ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,QAAQ,WACjBJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKV,UAAU,YACbQ,EAAAC,EAAAC,cAAA,aAAKnB,EAAL,4BACAiB,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKV,UAAU,cACbQ,EAAAC,EAAAC,cAAA,SAAOG,MAAO,CAAEC,MAAO,QACrBN,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aACGtB,EAAMH,cACLI,EAAM0B,IAAI,SAACC,GAAD,OACRR,EAAAC,EAAAC,cAACO,EAAA,SAAD,KACG,IACDT,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAAEK,aAAc,WACzBV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAIM,EAAK1C,KAAK6C,eAEhBX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAOM,EAAK1C,KAAK8C,UAEnBZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,YAAOM,EAAK1C,KAAK8C,UAEnBZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEa,QAASvB,EACTc,MAAO,CAAEU,OAAQ,cAGrBf,EAAAC,EAAAC,cAAA,UACoC,GAAjCM,EAAK1C,KAAKkD,oBACThB,EAAAC,EAAAC,cAAA,UACEG,MAAO,CACLY,UAAW,MACXC,aAAc,MACdC,QAAS,OACTC,gBAAiB,UACjBC,MAAO,WAETP,QAASjB,GARX,YAaAG,EAAAC,EAAAC,cAAA,UACEG,MAAO,CACLY,UAAW,MACXC,aAAc,MACdC,QAAS,QAEXG,UAAQ,GANV,aAYJtB,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEC,OAAQnC,EACRoC,OAAQlC,EACRC,UAAWA,EACXkC,KAAK,MAEL1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAaF,OAAQlC,GAArB,uBAGAS,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAKxB,MAAO,CAAEY,UAAW,SACvBjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAKC,GAAG,MAAR,YAEE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,MAAOjC,GAAYoC,EAAK1C,KAAK6C,aAAhC,MAEFX,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAKC,GAAG,KAAR,SAEE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,MAAOjC,GAAYoC,EAAK1C,KAAKkE,SAElChC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAKC,GAAG,KAAR,OAEE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,MAAOjC,GAAYoC,EAAK1C,KAAKmE,gBAElCjC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAKC,GAAG,KAAR,YAEE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,MAAOjC,GACPoC,EAAK1C,KAAKoE,iBADb,oBAKJlC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAKxB,MAAO,CAAEY,UAAW,SACvBjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAKC,GAAG,KAAR,aAEE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,MAAOjC,GAAYoC,EAAK1C,KAAKqE,aAElCnC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAKC,GAAG,MAAR,0BACA/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAKC,GAAG,KAAR,cAEE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,MAAOjC,GAAYoC,EAAK1C,KAAK8C,UAElCZ,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAKC,GAAG,KAAR,yBAEE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,MAAOjC,GACPoC,EAAK1C,KAAK8C,QAAUJ,EAAK1C,KAAK8C,QAAU,WAKjDZ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQhB,MAAM,YAAYP,QAASvB,GAAnC,WAKJS,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACE3C,KAAMA,EACN4C,QAASzC,EACT0C,kBAAgB,qBAChBC,mBAAiB,4BAEjBzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAmBC,GAAG,4BAAtB,QACQpC,EAAK1C,KAAK6C,aADlB,mBAIFX,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQvB,QAAShB,EAAauB,MAAM,UAApC,MAGArB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEvB,QAAS,kBApKPgC,EAoK4BtC,EAAK1C,KApKvBI,EAoK6BsC,EAAKoC,GAnKlEE,EAAS9B,oBAAsB,EAC/BpC,EAAMhC,yBAAyBsB,EAAQ4E,GACvCrF,QAAQC,IAAIQ,QACZ0B,GAAQ,GAJa,IAACkD,EAAU5E,GAqKZmD,MAAM,QACN0B,WAAS,GAHX,YAYR/C,EAAAC,EAAAC,cAAA,4ECjPd3D,EAAAC,EAAAC,EAAA,sBAAAa,IAAAf,EAAAC,EAAAC,EAAA,sBAAAuG,IAAO,IAAM1F,EAAM,wCAEN0F,EAAiB","file":"static/js/40.25215568.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { url } from \"../api\";\nimport * as ACTION_TYPES from \"./types\";\n\n/**\n * ===============================================================================\n * @Actions\n * Encounter CRUD OPERATIONS\n * returns API response from server => payload: response || error\n * @method GET => fetchPrescriptions() -> get all encounters: params {null} || query {dateStart}{dateEnd}\n *@method GET => fetchPatientPrescriptions() -> get all prescriptions for a patient: params {patientId} || query {}\n *================================================================================\n */\n\nexport const fetchPrescriptions = () => dispatch => {\n  axios\n    .get(\n      `${url}encounters/4ab293ff-6837-41e8-aa85-14f25ce59ef0/{dateStart}/{dateEnd}`\n    )\n    .then((response) => {\n      console.log(response)\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_FETCH_PRESCRIPTIONS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_ERROR,\n        payload: \"Something went wrong\",\n      });\n    });\n};\n\nexport const fetchPatientPrescriptions = (patientId) => dispatch => {\n  console.log(patientId)\n  axios\n    .get(\n      `${url}patients/${patientId}/encounters/4ab293ff-6837-41e8-aa85-14f25ce59ef0/{dateStart}/{dateEnd}`\n    )\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.FETCH_PATIENT_PRESCRIPTIONS,\n        payload: response.data,\n      });\n    })\n    .catch((error) => {\n      console.log(\"Pharmacy Error: \", error);\n      dispatch({\n        type: ACTION_TYPES.PHARMACY_ERROR,\n        payload: \"Something went wrong\",\n      });\n    });\n\n}\n// export const fetchEncounterById = (encounterId) => (dispatch) => {\n//          console.log(encounterId);\n//          axios\n//            .get(\n//              `${url}encounters/${encounterId}/form-data`\n//            )\n//            .then((response) => {\n//              dispatch({\n//                type: ACTION_TYPES.FETCH_ENCOUNTER_BY_ID,\n//                payload: response.data,\n//              });\n//            })\n//            .catch((error) => {\n//              console.log(\"Pharmacy Error: \", error);\n//              dispatch({\n//                type: ACTION_TYPES.PHARMACY_ERROR,\n//                payload: \"Something went wrong\",\n//              });\n//            });\n// };\n       \n// axios.put(`${url}form-data/${formId}`)\nexport const updatePrescriptionStatus = (formId, data) => (dispatch) => {\n         axios\n           .put( `${url}form-data/${formId}`, data)\n           .then((response) => {\n             dispatch({\n               type: ACTION_TYPES.UPDATE_PRESCRIPTION_STATUS,\n               payload: response.data,\n             });\n           })\n           .catch((error) => {\n             console.log(\"Pharmacy Error: \", error);\n             dispatch({\n               type: ACTION_TYPES.PHARMACY_ERROR,\n               payload: \"Something went wrong\",\n             });\n           });\n       };\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport \"./patientPrescriptions.css\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport {\n  fetchPatientPrescriptions,\n  updatePrescriptionStatus,\n} from \"../../actions/pharmacy\";\nimport { connect } from 'react-redux'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\n\nimport {\n  Col,\n  Row,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst textstyle = {\n  fontSize: \"14px\",\n  fontWeight: \"bolder\"\n};\n\nconst PatientPrescriptions = props => {\n \n  const forms = props.location.forms;\n  const patientName = props.location.patientName;\n  \n   const [modal2, setModal2] = useState(false);\n  const toggle2 = () => setModal2(!modal2);\n  const { className } = props;\n\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDispense = (formData, formId) => {\n    formData.prescription_status = 1\n    props.updatePrescriptionStatus(formId, formData);\n    console.log(formId)\n    setOpen(false);\n  };\n\n  useEffect(() => {\n   \n  })\n  \n\n  return (\n    <div className=\"patpres\">\n      <h2>Pharmacy</h2>\n      <Divider variant=\"middle\" />\n      <br />\n      <span>Pharmacy > 012345678</span>\n      <br />\n      <br />\n      <h5>View prescription - 012345678</h5>\n      <div className=\"info_box\">\n        <p> {patientName} ( 012345678) | 23 years</p>\n        <p> Female </p>\n      </div>\n      <div className=\"pres_table\">\n        <table style={{ width: \"80%\" }}>\n          <thead>\n            <tr>\n              <th>Prescription</th>\n              <th>Note/Remarks</th>\n              <th>View Details</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.prescriptions ? (\n              forms.map((form) => (\n                <Fragment>\n                  {\" \"}\n                  <tr style={{ marginBottom: \"10 rem\" }}>\n                    <td>\n                      <span>\n                        <b>{form.data.generic_name}</b>\n                      </span>\n                      <br />\n                      <span>{form.data.comment}</span>\n                    </td>\n                    <td>\n                      <span>{form.data.comment}</span>\n                    </td>\n                    <td>\n                      <VisibilityIcon\n                        onClick={toggle2}\n                        style={{ cursor: \"pointer\" }}\n                      />\n                    </td>\n                    <td>\n                      {form.data.prescription_status == 0 ? (\n                        <button\n                          style={{\n                            marginTop: \"5px\",\n                            borderRadius: \"3px\",\n                            outline: \"none\",\n                            backgroundColor: \"#40b02c\",\n                            color: \"#ffffff\",\n                          }}\n                          onClick={handleClickOpen}\n                        >\n                          dispense\n                        </button>\n                      ) : (\n                        <button\n                          style={{\n                            marginTop: \"5px\",\n                            borderRadius: \"3px\",\n                            outline: \"none\",\n                          }}\n                          disabled\n                        >\n                          dispense\n                        </button>\n                      )}\n                    </td>\n                    <td></td>\n                  </tr>\n                  <Modal\n                    isOpen={modal2}\n                    toggle={toggle2}\n                    className={className}\n                    size=\"lg\"\n                  >\n                    <ModalHeader toggle={toggle2}>\n                      Precription Details\n                    </ModalHeader>\n                    <ModalBody>\n                      <Row style={{ marginTop: \"20px\" }}>\n                        <Col xs=\"12\">\n                          Drug Name\n                          <br />\n                          <p style={textstyle}>{form.data.generic_name} </p>\n                        </Col>\n                        <Col xs=\"4\">\n                          Dosage\n                          <br />\n                          <p style={textstyle}>{form.data.dosage}</p>\n                        </Col>\n                        <Col xs=\"4\">\n                          Unit\n                          <br />\n                          <p style={textstyle}>{form.data.duration_unit}</p>\n                        </Col>\n                        <Col xs=\"4\">\n                          Frequency\n                          <br />\n                          <p style={textstyle}>\n                            {form.data.dosage_frequency} time(s) daily\n                          </p>\n                        </Col>\n                      </Row>\n                      <Row style={{ marginTop: \"20px\" }}>\n                        <Col xs=\"4\">\n                          Start Date\n                          <br />\n                          <p style={textstyle}>{form.data.start_date}</p>\n                        </Col>\n                        <Col xs=\"12\">Additional Information</Col>\n                        <hr />\n                        <Col xs=\"4\">\n                          Instruction\n                          <br />\n                          <p style={textstyle}>{form.data.comment}</p>\n                        </Col>\n                        <Col xs=\"4\">\n                          Additional Instruction\n                          <br />\n                          <p style={textstyle}>\n                            {form.data.comment ? form.data.comment : \"None\"}\n                          </p>\n                        </Col>\n                      </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                      <Button color=\"secondary\" onClick={toggle2}>\n                        Close\n                      </Button>\n                    </ModalFooter>\n                  </Modal>\n                  <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                  >\n                    <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\">\n                        Mark {form.data.generic_name} as dispensed?\n                      </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button onClick={handleClose} color=\"danger\">\n                        No\n                      </Button>\n                      <Button\n                        onClick={() => handleDispense(form.data, form.id)}\n                        color=\"green\"\n                        autoFocus\n                      >\n                        Yes\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                </Fragment>\n              ))\n            ) : (\n              <h2>No Prescriptions Found</h2>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    prescriptions: state.pharmacy.patientPrescriptions,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  fetchPatientPrescriptions,\n  updatePrescriptionStatus,\n})(PatientPrescriptions);\n","export const url = 'http://lamisplus.org/base-module/api/';\nexport const HIVSERVICECODE = \"\";\nexport const LABSERVICECODE = \"87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e\";\nexport const PHARMACYSERVICECODE = \"\";\n"],"sourceRoot":""}