{"version":3,"sources":["main/webapp/demos/dashboardPage.js","main/webapp/pages/DashboardPage.js","main/webapp/components/Typography.js","main/webapp/components/Page.js","main/webapp/utils/colors.js","main/webapp/utils/demos.js","main/webapp/components/UserProgressTable.js"],"names":["MONTHS","genLineData","moreData","arguments","length","undefined","moreData2","labels","datasets","Object","objectSpread","label","backgroundColor","getColor","borderColor","borderWidth","data","randomNum","console","log","userProgressTableData","name","cardStyle","DashboardPage","window","scrollTo","react_default","a","createElement","Page","className","title","Row","Col","lg","md","sm","xs","Card","style","CardBody","CardTitle","tag","index_esm","size","md_index_esm","xl","CardHeader","es","fill","UserProgressTable","headers","usersData","React","Component","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","type","restProps","objectWithoutProperties","classes","classNames","defineProperty","assign","defaultProps","bem","bn","create","breadcrumbs","children","b","e","components_Typography","Breadcrumb","BreadcrumbItem","map","_ref2","index","active","key","__webpack_require__","d","__webpack_exports__","availableColor","getComputedStyle","document","documentElement","getPropertyValue","concat","faker_lib_random__WEBPACK_IMPORTED_MODULE_0__","faker_lib_random__WEBPACK_IMPORTED_MODULE_0___default","n","min","max","random","number","_Users_matosky_lamis_ui_lamisplus_baseui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_3__","responsive","hover","item","reactstrap__WEBPACK_IMPORTED_MODULE_4__","color"],"mappings":"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","file":"static/js/43.1724efb9.chunk.js","sourcesContent":["import { getColor } from '../utils/colors';\nimport { randomNum } from '../utils/demos';\n\nconst MONTHS = ['January', 'February', 'March', 'April'];\n\nexport const genLineData = (moreData = {}, moreData2 = {}) => {\n  return {\n    labels: MONTHS,\n    datasets: [\n      {\n        label: 'Male',\n        backgroundColor: getColor('primary'),\n        borderColor: getColor('primary'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n\n        ],\n        ...moreData,\n      },\n      {\n        label: 'Female',\n        backgroundColor: getColor('secondary'),\n        borderColor: getColor('secondary'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData2,\n      },\n    ],\n  };\n  \n};\n\nconsole.log(genLineData);\n\n\nexport const userProgressTableData = [\n  {\n\n    name: 'Tom Suliman'\n\n  },\n  {\n    name: 'Jenny Alex'\n  },\n  {\n    name: 'Simi Adedeji'\n  },\n  {\n    \n    name: 'Christine Ada'\n  }\n  \n];\n\nexport const chartjs = {\n\n  line: {\n    data: {\n      labels: ['January', 'February', 'March', 'April'],\n      datasets: [\n        {\n          label: 'Number of Female for the month',\n          borderColor: '#6a82fb',\n          backgroundColor: '#6a82fb',\n          data: [0, 1300, 2200, 3400],\n        },\n\n        {\n          label: 'Number of Male for the month',\n          borderColor: '#fc5c7d',\n          backgroundColor: '#fc5c7d',\n          data: [0, 1300, 2200, 3400],\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Total Number of Registered Patients- last 4 months',\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n      },\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: false,\n              labelString: 'Month',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n              labelString: 'Value',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n","import Page from 'components/Page';\nimport UserProgressTable from 'components/UserProgressTable';\n\nimport { FaUserPlus, FaCalendarAlt, FaUserCheck} from 'react-icons/fa'; \nimport { MdAirlineSeatIndividualSuite} from 'react-icons/md';\nimport {\n  genLineData,\n  // chartjs,\n  userProgressTableData,\n} from 'demos/dashboardPage';\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\n\nconst cardStyle = {\n  borderColor: '#fff',\n};\nclass DashboardPage extends React.Component {\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n\n    return (\n      <Page\n        className=\"DashboardPage p-5\"\n        title=\"Dashboard\"\n      >\n               {/* Card stats */}\n               <Row>\n                <Col lg={3} md={6} sm={6} xs={12}>\n                  <Card  style={cardStyle} className=\"card-stats mb-4 mb-xl-0 p-3\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                           tag=\"h6\"\n                            className=\" text-uppercase text-muted mb-0\" \n                          >\n                            Total Patient\n                          </CardTitle>\n                          <span className=\"h3 font-weight-bold mb-5\">\n                            350,897\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape  text-primary \" >\n                            <FaUserPlus size={30} />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fa fa-arrow-up\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">this month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg={3} md={6} sm={6} xs={12}>\n                  <Card style={cardStyle} className=\"card-stats mb-4 mb-xl-0 p-3\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h6\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Emergency\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            22\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <MdAirlineSeatIndividualSuite size={30} />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-danger mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">This week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg={3} md={6} sm={6} xs={12}>\n                  <Card style={cardStyle} className=\"card-stats mb-4 mb-xl-0 p-3\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h6\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Checked In\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">924</span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-yellow text-black rounded-circle shadow\">\n                            <FaUserCheck size={30} />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-warning mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 1.10%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">As at Today</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg={3} md={6} sm={6} xs={12}>\n                  <Card style={cardStyle} className=\"card-stats mb-4 mb-xl-0 p-3 \">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h6\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Appointments\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            49\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <FaCalendarAlt size={30} />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fas fa-arrow-up\" /> 12%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">As at Today</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n\n          <Row>\n      \n          \n          <Col md=\"8\" sm=\"12\" xs=\"12\" xl=\"6\" lg=\"8\">\n            <Card>\n              <CardHeader>Total Registered Patients (Male and Female)  {' '}\n              \n                <small className=\"text-muted text-capitalize\">In the last 4 Months</small>\n              </CardHeader>\n              <CardBody>\n                <Line data={genLineData({ fill: false }, { fill: false })} />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"4\" sm=\"12\" xs=\"12\" xl=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>Active Clinicians Now</CardHeader>\n              <CardBody>\n                <UserProgressTable\n                  headers={[\n                    'name'  \n                  ]}\n                  usersData={userProgressTableData}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        \n\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import random from 'faker/lib/random';\n\nexport const randomNum = (min = 0, max = 1000) => {\n  return random().number({ min, max });\n};\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\nimport { Table, Badge } from 'reactstrap';\n\n\n\nconst UserProgressTable = ({ headers, usersData, ...restProps }) => {\n  return (\n    <Table responsive hover {...restProps}>\n      <thead>\n        <tr className=\"text-capitalize \">\n          {headers.map((item, index) => <th key={index}>{item}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {usersData.map(({ name}, index) => (\n          <tr key={index}>\n            \n            \n            <td className=\"text-primary\">{name}</td>\n            <td className=\"align-middle text-center\">\n              <Badge color=\"success\"></Badge>\n            </td>\n\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nUserProgressTable.propTypes = {\n  headers: PropTypes.node,\n  usersData: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })\n  ),\n};\n\nUserProgressTable.defaultProps = {\n  headers: [],\n  usersData: [],\n};\n\nexport default UserProgressTable;\n"],"sourceRoot":""}